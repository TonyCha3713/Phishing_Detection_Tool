From: kate.fraser@enron.com
To: Crispin Miller <CMiller@picr.man.ac.uk>
Subject: MIME Attack Sample
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
X-dc: dzzjwylhyyvzhzvalhzgyhzh gvqachzaycvqyaz jwlcgqgzz
Status: O
X-Status: 
X-Keywords:                  
X-UID: 308

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>National Small Business Alliance</title>
<meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Diso-8859-=
1">
</head>

<body>
<div align=3D"center">
  <p><a href=3D"http://iafkcxfek.ygcmails.com/vkftfb.html" target=3D"=
_blank"><img src=3D"http://ucrczgtizezn.qlu7rles.com/kjfedfkjqko/zxmbnkjfak=
/jfkoajko/nsba032105.gif" width=3D"550" height=3D"400" border=3D"0"></a></p=
>
  <p><a href=3D"http://iafkcxfek.ygcmails.com/ybpdpm.html" target=3D"=
_blank"><img src=3D"http://ucrczgtizezn.qlu7rles.com/kjfedfkjqko/zxmbnkjfak=
/jfkoajko/nsba032105_oo.gif" width=3D"250" height=3D"63" border=3D"0"></a><=
/p>
  <p>&nbsp; </p>
</div>
<img src=3D"http://iafkcxfek.ygcmails.com/gztptt.gif&o=3D1" width=3D"=
0" height=3D"0"> </body>
</html><div align=3Dcenter><table border=3D0 cellpadding=3D3 cellspacing=3D=
0 bg color=3D#ffffff width=3D550><tr><td><font face=3D"verdana, sans-serif"=
 size=3D1#444444> If you do not want to receive future messages send a blan=
k email <a href=3Dmailto:unsub-qeirloiarteaio@iafkcxfek.shankscape.com" style=3Dcolor:333333> here</a=
> Or write to Customer Service, PO Box 390520, Mountain View, CA 94039-0520=
<br><br>This message was sent to address <b>username@domain.com</b> by virtue of si=
gning up at afg import on .<br></font></td></tr></table></div>
Content-Type: text/html
<div style="display: none;"><plaintext>
Content-Type: text/plain
BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Bram Geron wrote:
> The patch in <parrot.solution1.patch> fixes the problem for me.

I realized that contexts currently initially have a ref_count of 0, if
they're not used as :outer targets for other subs. So in 'normal'
situations, the caller's context's ref_count now drops from 0 to -1 in a
tail call, and since -1 != 0 the caller's context will never be freed,
resulting in a memory leak. Attached <parrot.solution1.updated.patch>
should fix that.

Still, I'm left with a question. How can we DOD a closure? To me it
seems that once a closure exists, it references its context. Often the
context is still left in a register, so the context references the
closure PMC, which in turn references the closure. Because we use
reference counting in these cases, no count ever drops to zero, and they
all live forever.

Sorry for the extra disturbance, thanks for looking at my mail,
- --
Bram Geron | GPG 0xE7B9E65E
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFGUKbOvquQbee55l4RAp5wAJ0czwrfQc5Ta/xtMn7FqhSeptq/awCfbNg2
FxMZOHymYqUQCNoyK54pBmo=
=bjro
-----END PGP SIGNATURE-----

----