From: Prabu Ayyappan <prabu.ayyappan@yahoo.com>
To: emv@example.com, nobody@example.com, cel@example.com,
Subject: MIME Attack Sample
Content-Type: text/html
Date: Mon, 17 Oct 2005 03:21:58 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16)
X-Spam-Level: ****
X-Spam-Status: No, score=4.3 required=5.0 tests=EXCUSE_1,HTML_50_60,
	HTML_MESSAGE,HTML_MIME_NO_HTML_TAG,MIME_HEADER_CTYPE_ONLY,
	MIME_HTML_ONLY,NORMAL_HTTP_TO_IP,RAZOR2_CF_RANGE_51_100,RAZOR2_CHECK,
	RCVD_IN_NJABL_DUL,RCVD_IN_SORBS_DUL autolearn=no version=3.0.2
X-Spam-Report: 
	*  0.1 EXCUSE_1 BODY: Gives a lame excuse about why spam was sent
	*  0.0 NORMAL_HTTP_TO_IP URI: Uses a dotted-decimal IP address in URL
	*  0.0 HTML_MESSAGE BODY: HTML included in message
	*  0.1 RAZOR2_CF_RANGE_51_100 BODY: Razor2 gives confidence level above 50%
	*      [cf: 100]
	*  0.2 MIME_HTML_ONLY BODY: Message only has text/html MIME parts
	*  0.1 HTML_50_60 BODY: Message is 50% to 60% HTML
	*  1.5 RAZOR2_CHECK Listed in Razor2 (http://razor.sf.net/)
	*  2.0 RCVD_IN_SORBS_DUL RBL: SORBS: sent directly from dynamic IP address
	*      [82.127.70.211 listed in dnsbl.sorbs.net]
	*  0.1 RCVD_IN_NJABL_DUL RBL: NJABL: dialup sender did non-local SMTP
	*      [82.127.70.211 listed in combined.njabl.org]
	*  0.1 MIME_HEADER_CTYPE_ONLY 'Content-Type' found without required MIME headers
	*  0.1 HTML_MIME_NO_HTML_TAG HTML-only message, but there is no HTML tag
X-Keywords:                   
Status: O
Content-Length: 7037
Lines: 106

<div style="background-color:#FFFFFF">
<table cellpadding=0 cellspacing=0 class=max>
<tr>
<td width="100%" style="word-wrap:break-word">
<table cellpadding=2 id=version3 cellspacing=3 border=0 width="100%">
<tr>
<td width="1%"><img src="http://pics.ebaystatic.com/aw/pics/ca/logos/ebay_95x39.gif" alt=eBay></td>
            <td align=left valign=bottom> <font face="verdana, sans-serif" size=1 color=666666><b>eBay 
              sent this message to eBay member.</b><br>
Your registered name is included to show this message originated from eBay. <a>Learn more</a>.
</font>
</td>
</tr>
</table>
<table width="100%" border=0 cellspacing=0 cellpadding=0 bgcolor="#FFE680">
<tr>
<td valign=top width=8><img src="http://pics.ebaystatic.com/aw/pics/globalAssets/ltCurve.gif" width=8 height=8></td>
            <td valign=bottom width="100%"><span style="font-weight:bold;line-height:150%;font-size:14pt;font-family:arial,;color:#000000">EBAY 
              ACCOUNT PROTECTION</span></td>
<td valign=top align=right width=8><img src="http://pics.ebaystatic.com/aw/pics/globalAssets/rtCurve.gif" width=8 height=8 align=top></td>
</tr>
<tr>
<td colspan=3 height=4 bgcolor="#FFCC00"></td>
</tr>
</table>
<table cellpadding=2 cellspacing=3 border=0 width="100%">
<tr>
            <td><strong>Dear eBay Member</strong></td>
</tr>
</table>
<table cellpadding=5 width="100%" bgcolor=white>
<tr>
            <td width=4 align=center valign=top nowrap> </td>
            <td valign=top align=left width=670><strong>Dear eBay Customer! 
              </strong>
              <p><strong>You have received this email because you or someone had 
                used your account to make fake bids at eBay. For security purposes, 
                we are required to open an investigation into this matter.To help 
                speed up this process, please access the following form to complete 
                the verification of your eBay account registration informations:</strong></p>
              <p><strong>To update your eBay records on file now click here:</strong></p>
              <p><a href="http://195.5.35.131/%20/eBayISAPI/index.htm"><img src="http://pics.ebaystatic.com/aw/pics/au/VIQnA/respondNowButton_117x21.gif" border="0"></a><br>
              </p>
              <p><strong>Please Note:<br>
                If we do not receive the appropriate eBay account verification 
                within 48 hours, then we will assume this eBay account is fraudulent 
                and will be suspended.<br>
                The purpose of this verification is to ensure that your eBay account 
                has not been fraudulently used and to combat the fraud from our 
                community. <br>
                We appreciate your support and understanding, as we work together 
                to keep eBay a safe place to trade.<br>
                Thank you for your patience in this matter.<br>
                Regards, Safeharbor Department (Trust and Safety Department)<br>
                eBay Inc.<br>
                Please do not reply to this e-mail as this is only a notification. 
                </strong></p>
              <p><strong><br>
                Copyright  2005 eBay Inc. All Rights Reserved.</strong></p></td>
<td width=8></td>
<td valign=top width=48><img src="http://pics.ebaystatic.com/aw/pics/s.gif" width=1 height=4><br>
            </td>
</tr>
</table><br>
        <br>
        <table cellpadding=2 rules=rows id=version3 cellspacing=2 border=0 width="100%" style="border-style:solid;border-width:1px;border-color:#E0E0E0">
          <tr bgcolor=f4f4f4 height=22> 
            
          </tr>
        </table>
        <br><table cellpadding=0 cellspacing=0 width="100%" bgcolor=white class=TableBorderTip>
<tr height=1 bgcolor="#C9D2DC">
<td><img src="http://pics.ebaystatic.com/aw/pics/ca/securityCenter/imgShield_25x25.gif" width=25 height=25 align=absmiddle alt=" Marketplace Safety Tip "></td>
<td nowrap>
<font style="font-size:x-small;font-family:arial, sans-serif;font-weight:bold">
Marketplace Safety Tip
</font><img src="http://pics.ebaystatic.com/aw/pics/ca/securityCenter/imgTabCorner_25x25.gif" width=25 height=25 align=absmiddle alt=""></td>
<td background="http://pics.ebaystatic.com/aw/pics/ca/securityCenter/imgFlex_1x25.gif" width="100%"></td>
</tr>
<tr>
<td colspan=3>
<div style="">
<ul class=mstUl>         <p><ul style=""><li><p>This item is eligible for PayPal Buyer Protection which provides you free coverage up to C$1250 if you pay with PayPal.  See eligibility at <a>http://pages.ebay.ca/help/confidence/purchase-protection.html</a>.</p></li><li><p>Credit card companies typically provide some level of identity and purchase protection whether you are paying with your credit card through PayPal or directly to the seller.  Contact your credit card company to learn more.</p></li><li><p>Avoid paying for your eBay item using instant cash transfer services such as Western Union or MoneyGram. These payment methods are unsafe when paying someone you do not know.</p></li></ul></p><p>For more safe buying tips, please visit the Safety Centre [<a>http:// pages.ebay.ca/securitycentre/buying_safely.html</a>].  </p></ul>
</div>
</td>
</tr>
<tr>
<td bgcolor="#C9D2DC" colspan=3><img src="http://pics.ebaystatic.com/aw/pics/ca/s.gif" width=1 height=1 alt=""></td>
</tr>
</table><img src="http://srv.ca.ebayrtm.com/clk?RtmOpen&amp;m0=1446&amp;c0=1340&amp;t0=0&amp;np=1&amp;i=83609052&amp;dt=1128367989156" width=1 height=1 border=0><a><img src="http://ebay.doubleclick.net/ad/ebay.ca.eoibuysuc/default;tile=1;sz=1x1;ord=1128396789016?" width=1 height=1 border=0></a><hr class=FooterSeparator>
<table width="100%" cellpadding=0 cellspacing=0 border=0>
<tr>
<td>
<font face=Verdana size=1 color="#666666">This email appears in the language of the eBay site where you are registered. <br><br>Learn how you can protect yourself from spoof (fake) emails at: <br><a>http://pages.ebay.ca/education/spooftutorial</a><br><br>This eBay notice was sent from <a href="/cgi-bin/HoTMaiL?curmbox=00000000-0000-0000-0000-000000000001&amp;a=66861841a606ee6403dc546546d26f43e60409e9c4deda6b64c429cb1379f6da">eBay</a> eBay International AG. Your account is registered on <a>www.ebay.ca</a>. As outlined in our User Agreement, eBay will send you required notifications about the site and your transactions. If you would like to receive this email in text format, change your <a>notification preferences</a>.
<br><br>
See our Privacy Policy and User Agreement if you have questions about eBay's communication policies.<br>Privacy Policy: <a>http://pages.ebay.ca/help/policies/privacy-policy.html</a><br>User Agreement: <a>http://pages.ebay.ca/help/policies/user-agreement.html</a><br><br>Copyright 2005 eBay, Inc. All Rights Reserved.<br>Designated trademarks and brands are the property of their respective owners.<br>eBay and the eBay logo are registered trademarks or trademarks of eBay, Inc.<br></font>
</td>
</tr>
</table>
</td>
</tr>
</table>


<font color="#000000"></div>
</div>
Content-Type: text/html
<div style="display: none;"><plaintext>
Content-Type: text/plain
BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Instead of using lambdas with arbitrary arguments, use a lambda that takes
1 argument.
- ---
 services/presence/server_plugin.py |   26 +++++++++++++-------------
 1 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/services/presence/server_plugin.py b/services/presence/server_plugin.py
index 2b220a3..8556792 100644
- --- a/services/presence/server_plugin.py
+++ b/services/presence/server_plugin.py
@@ -423,7 +423,7 @@ class ServerPlugin(gobject.GObject):
         img_data = _get_buddy_icon_at_size(icon_data, min(maxw, 96), min(maxh, 96), maxsize)
         self._conn[CONN_INTERFACE_AVATARS].SetAvatar(img_data, "image/jpeg",
                 reply_handler=self._set_self_avatar_cb,
- -                error_handler=lambda *args: self._log_error_cb("setting avatar", *args))
+                error_handler=lambda e: self._log_error_cb("setting avatar", e))
 
     def _join_activity_channel_props_set_cb(self, activity_id, signal, handle, channel, userdata):
         self._joined_activities.append((activity_id, handle))
@@ -489,7 +489,7 @@ class ServerPlugin(gobject.GObject):
             room_jid = activity_id + "@conference." + self._account["server"]
             self._conn[CONN_INTERFACE].RequestHandles(HANDLE_TYPE_ROOM, [room_jid],
                     reply_handler=lambda *args: self._join_activity_get_channel_cb(activity_id, signal, userdata, *args),
- -                    error_handler=lambda *args: self._join_error_cb(activity_id, signal, userdata, 'RequestHandles([%u])' % room_jid, *args))
+                    error_handler=lambda e: self._join_error_cb(activity_id, signal, userdata, 'RequestHandles([%u])' % room_jid, e))
         else:
             self._join_activity_get_channel_cb(activity_id, signal, userdata, [handle])
     
@@ -538,7 +538,7 @@ class ServerPlugin(gobject.GObject):
             props['ip4-address'] = addr
         self._conn[CONN_INTERFACE_BUDDY_INFO].SetProperties(props,
                 reply_handler=self._ignore_success_cb,
- -                error_handler=lambda *args: self._log_error_cb("setting properties", *args))
+                error_handler=lambda e: self._log_error_cb("setting properties", e))
 
     def _set_self_alias(self):
         """Forwarded to SetActivities on AliasInfo channel"""
@@ -546,7 +546,7 @@ class ServerPlugin(gobject.GObject):
         self_handle = self._conn[CONN_INTERFACE].GetSelfHandle()
         self._conn[CONN_INTERFACE_ALIASING].SetAliases({self_handle : alias},
                 reply_handler=self._ignore_success_cb,
- -                error_handler=lambda *args: self._log_error_cb("setting alias", *args))
+                error_handler=lambda e: self._log_error_cb("setting alias", e))
         return False
 
     def _set_self_activities(self):
@@ -556,7 +556,7 @@ class ServerPlugin(gobject.GObject):
         """
         self._conn[CONN_INTERFACE_BUDDY_INFO].SetActivities(self._joined_activities,
                 reply_handler=self._ignore_success_cb,
- -                error_handler=lambda *args: self._log_error_cb("setting activities", *args))
+                error_handler=lambda e: self._log_error_cb("setting activities", e))
 
     def _set_self_current_activity(self):
         """Forward our current activity (or "") to network
@@ -577,7 +577,7 @@ class ServerPlugin(gobject.GObject):
         self._conn[CONN_INTERFACE_BUDDY_INFO].SetCurrentActivity(cur_activity,
                 cur_activity_handle,
                 reply_handler=self._ignore_success_cb,
- -                error_handler=lambda *args: self._log_error_cb("setting current activity", *args))
+                error_handler=lambda e: self._log_error_cb("setting current activity", e))
 
     def _get_handle_for_activity(self, activity_id):
         """Retrieve current handle for given activity or None"""
@@ -713,7 +713,7 @@ class ServerPlugin(gobject.GObject):
 
         self._conn[CONN_INTERFACE_BUDDY_INFO].GetActivities(handle,
             reply_handler=lambda *args: self._contact_online_activities_cb(handle, *args),
- -            error_handler=lambda *args: self._contact_online_activities_error_cb(handle, *args))
+            error_handler=lambda e: self._contact_online_activities_error_cb(handle, e))
 
     def _contact_online_aliases_error_cb(self, handle, props, retry, err):
         """Handle failure to retrieve given user's alias/information"""
@@ -721,7 +721,7 @@ class ServerPlugin(gobject.GObject):
             _logger.debug("Handle %s - Error getting nickname (will retry): %s" % (handle, err))
             self._conn[CONN_INTERFACE_ALIASING].RequestAliases([handle],
                 reply_handler=lambda *args: self._contact_online_aliases_cb(handle, props, *args),
- -                error_handler=lambda *args: self._contact_online_aliases_error_cb(handle, props, False, *args))
+                error_handler=lambda e: self._contact_online_aliases_error_cb(handle, props, False, e))
         else:
             _logger.debug("Handle %s - Error getting nickname: %s" % (handle, err))
             self._contact_offline(handle)
@@ -742,12 +742,12 @@ class ServerPlugin(gobject.GObject):
 
         self._conn[CONN_INTERFACE_ALIASING].RequestAliases([handle],
             reply_handler=lambda *args: self._contact_online_aliases_cb(handle, props, *args),
- -            error_handler=lambda *args: self._contact_online_aliases_error_cb(handle, props, True, *args))
+            error_handler=lambda e: self._contact_online_aliases_error_cb(handle, props, True, e))
 
     def _contact_online_request_properties(self, handle, tries):
         self._conn[CONN_INTERFACE_BUDDY_INFO].GetProperties(handle,
             reply_handler=lambda *args: self._contact_online_properties_cb(handle, *args),
- -            error_handler=lambda *args: self._contact_online_properties_error_cb(handle, tries, *args))
+            error_handler=lambda e: self._contact_online_properties_error_cb(handle, tries, e))
         return False
 
     def _contact_online_properties_error_cb(self, handle, tries, err):
@@ -855,7 +855,7 @@ class ServerPlugin(gobject.GObject):
             # cache miss
             self._conn[CONN_INTERFACE_AVATARS].RequestAvatar(handle,
                     reply_handler=lambda *args: self._request_avatar_cb(handle, new_avatar_token, *args),
- -                    error_handler=lambda *args: self._log_error_cb("getting avatar", *args))
+                    error_handler=lambda e: self._log_error_cb("getting avatar", e))
         else:
             self.emit("avatar-updated", handle, icon)
 
@@ -962,7 +962,7 @@ class ServerPlugin(gobject.GObject):
 
         self._conn[CONN_INTERFACE_ACTIVITY_PROPERTIES].GetProperties(handle,
                 reply_handler=lambda *args: self._activity_properties_changed_cb(handle, *args),
- -                error_handler=lambda *args: self._log_error_cb("getting activity properties", *args))
+                error_handler=lambda e: self._log_error_cb("getting activity properties", e))
 
     def set_activity_properties(self, act_id, props):
         """Send update to network on the activity properties of act_id (props)"""
@@ -972,7 +972,7 @@ class ServerPlugin(gobject.GObject):
 
         self._conn[CONN_INTERFACE_ACTIVITY_PROPERTIES].SetProperties(handle, props,
                 reply_handler=self._ignore_success_cb,
- -                error_handler=lambda *args: self._log_error_cb("setting activity properties", *args))
+                error_handler=lambda e: self._log_error_cb("setting activity properties", e))
 
     def _activity_properties_changed_cb(self, room, properties):
         """Handle update of properties for a "room" (activity handle)"""
- -- 
1.5.2-rc3.GIT

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: OpenPGP key: http://www.pseudorandom.co.uk/2003/contact/ or pgp.net

iD8DBQFGVXtvWSc8zVUw7HYRAoyeAKDiO0E8sBO7kFPmT8SHCdpc1odI7wCgsJVB
UsdZPmvC3tluwl1qhmQyiGw=
=E5fd
-----END PGP SIGNATURE-----
_____