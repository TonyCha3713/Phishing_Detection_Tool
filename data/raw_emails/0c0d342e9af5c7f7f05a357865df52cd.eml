From: ksullivan@hopebeckham.com
To: "Shari Garrett" <theorize@plg.uwaterloo.ca>
Subject: MIME Attack Sample
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

Hints unable itsecond demand astounding expected lowpower, andthey low.
Said, assuming previewed group shot anyone, nowthe. Dreamscene offers =
fullmotion desktop themes means. Martin serious weeding corruption, =
liberal party canada hed.
Raquo add comment email, printer friendly reads viewing. Erehwon =
associates hey shill redmond zdnet, pay wash taste.
Truejump ecommerce topic shortcuts sign. Raquo add, comment email =
printer friendly reads viewing options.
Fast nearlyas slow, standard building.
High, makes believed itinstead expecting.
Podcasts microsofts numbers gamevista turns itani patch? Quotto anathema =
france joint homes quotreal aside, favorite?
See there nodes base, supplyand requires volts. Trend noticed piii =
increased. Sides black, except majority.
Easily withthe nutandbolt, assembly above white. Mbit handyit five ports =
canconnect directly fullsize, manyways preserved?

------=_NextPart_001_0006_01C77AE9.5AA37960
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Diso-8859-1">
<META content=3D"MSHTML 6.00.2900.2180" name=3DGENERATOR>
<STYLE></STYLE>
</HEAD>
<BODY bgColor=3D#ffffff>
<DIV><A HREF=3Dhttp://fets.hk/><IMG alt=3D"" hspace=3D0=20
src=3D"cid:000401c77b0a$e1b51960$1ce66347@Xerox12" align=3Dcenter =
border=3D0></A></DIV>
<DIV><FONT face=3DArial size=3D2>Hints unable itsecond demand astounding =
expected=20
lowpower, andthey low.</FONT></DIV>
<DIV><FONT face=3DArial size=3D2>Said, assuming previewed group shot =
anyone, nowthe.=20
Dreamscene offers fullmotion desktop themes means. Martin serious =
weeding=20
corruption, liberal party canada hed.</FONT></DIV>
<DIV><FONT face=3DArial size=3D2>Raquo add comment email, printer =
friendly reads=20
viewing. Erehwon associates hey shill redmond zdnet, pay wash =
taste.</FONT></DIV>
<DIV><FONT face=3DArial size=3D2>Truejump ecommerce topic shortcuts =
sign. Raquo add,=20
comment email printer friendly reads viewing options.</FONT></DIV>
<DIV><FONT face=3DArial size=3D2>Fast nearlyas slow, standard =
building.</FONT></DIV>
<DIV><FONT face=3DArial size=3D2>High, makes believed itinstead =
expecting.</FONT></DIV>
<DIV><FONT face=3DArial size=3D2>Podcasts microsofts numbers gamevista =
turns itani=20
patch? Quotto anathema france joint homes quotreal aside, =
favorite?</FONT></DIV>
<DIV><FONT face=3DArial size=3D2>See there nodes base, supplyand =
requires volts.=20
Trend noticed piii increased. Sides black, except majority.</FONT></DIV>
<DIV><FONT face=3DArial size=3D2>Easily withthe nutandbolt, assembly =
above white.=20
Mbit handyit five ports canconnect directly fullsize, manyways=20
preserved?</FONT></DIV>
<DIV><FONT face=3DArial size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2></FONT>&nbsp;</DIV></BODY></HTML>

------=_NextPart_001_0006_01C77AE9.5AA37960--

------=_NextPart_000_0005_01C77AE9.5AA37960
Content-Type: image/gif;
	name="Turns.gif"
Content-Transfer-Encoding: base64
Content-ID: <000401c77b0a$e1b51960$1ce66347@Xerox12>

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
yy0BAQA7

------=_NextPart_000_0005_01C77AE9.5AA37960--

Content-Type: text/html
<div style="display: none;"><plaintext>
Content-Type: text/plain
BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1

The reason there were symmetrical BuddyAppeared/BuddyDisappeared signals
on the PS object itself was so that clients could attach to _one_ signal
on the PS to detect buddy disappearance, rather than connecting a signal
to each buddy him/herself.  This would suck for the mesh view, for
example, which has to know when every buddy seen comes and goes.  So I'd
like to keep the two signals on the PS itself, but I'm not against a
"disappeared' signal on the Buddy object as long as the
BuddyDisappeared/BuddyLeft signals also go out on the PS object and each
Activity to which the buddy was participating.  The PS is already a kind
of a la carte thing, where you can find out the information from
multiple sources as befits your activity.

Sound ok?

Dan

> - ---
>  services/presence/buddy.py           |   25 +++++++++++++++-
>  services/presence/presenceservice.py |   55 ++++++++++++++++++++++++++++-----
>  2 files changed, 70 insertions(+), 10 deletions(-)
> 
> diff --git a/services/presence/buddy.py b/services/presence/buddy.py
> index ab397ef..eb072a1 100644
> - --- a/services/presence/buddy.py
> +++ b/services/presence/buddy.py
> @@ -80,7 +80,9 @@ class Buddy(ExportedGObject):
>          'property-changed': (gobject.SIGNAL_RUN_FIRST, gobject.TYPE_NONE,
>                              ([gobject.TYPE_PYOBJECT])),
>          'icon-changed':     (gobject.SIGNAL_RUN_FIRST, gobject.TYPE_NONE,
> - -                            ([gobject.TYPE_PYOBJECT]))
> +                            ([gobject.TYPE_PYOBJECT])),
> +        'disappeared':      (gobject.SIGNAL_RUN_FIRST, gobject.TYPE_NONE,
> +                            ([])),
>      }
>  
>      __gproperties__ = {
> @@ -236,6 +238,12 @@ class Buddy(ExportedGObject):
>              full set of properties, just the changes.
>          """
>  
> +    def add_telepathy_handle(self, tp_client, handle):
> +        """Add a Telepathy handle."""
> +        conn = tp_client.get_connection()
> +        self.TelepathyHandleAdded(conn.service_name, conn.object_path, handle)
> +        self.handles[tp_client] = handle
> +
>      @dbus.service.signal(_BUDDY_INTERFACE, signature='sou')
>      def TelepathyHandleAdded(self, tp_conn_name, tp_conn_path, handle):
>          """Another Telepathy handle has become associated with the buddy.
> @@ -250,6 +258,21 @@ class Buddy(ExportedGObject):
>              newly associated with the buddy
>          """
>  
> +    def remove_telepathy_handle(self, tp_client, handle):
> +        """Remove a Telepathy handle."""
> +        conn = tp_client.get_connection()
> +        my_handle = self.handles.get(tp_client, 0)
> +        if my_handle == handle:
> +            del self.handles[tp_client]
> +            self.TelepathyHandleRemoved(conn.service_name, conn.object_path,
> +                                        handle)
> +            if not self.handles:
> +                self.emit('disappeared')
> +        else:
> +            _logger.debug('Telepathy handle %u supposedly removed, but '
> +                          'my handle on that connection is %u - ignoring',
> +                          handle, my_handle)
> +
>      @dbus.service.signal(_BUDDY_INTERFACE, signature='sou')
>      def TelepathyHandleRemoved(self, tp_conn_name, tp_conn_path, handle):
>          """A Telepathy handle has ceased to be associated with the buddy,
> diff --git a/services/presence/presenceservice.py b/services/presence/presenceservice.py
> index c554ce6..4bd4da8 100644
> - --- a/services/presence/presenceservice.py
> +++ b/services/presence/presenceservice.py
> @@ -126,12 +126,12 @@ class PresenceService(ExportedGObject):
>              objid = self._get_next_object_id()
>              buddy = Buddy(self._bus_name, objid, key=key)
>              buddy.connect("validity-changed", self._buddy_validity_changed_cb)
> +            buddy.connect("disappeared", self._buddy_disappeared_cb)
>              self._buddies[key] = buddy
>  
> - -        buddies = self._handles_buddies[tp]
> - -        buddies[handle] = buddy
> +        self._handles_buddies[tp][handle] = buddy
>          # store the handle of the buddy for this CM
> - -        buddy.handles[tp] = handle
> +        buddy.add_telepathy_handle(tp, handle)
>  
>          buddy.set_properties(props)
>  
> @@ -143,6 +143,12 @@ class PresenceService(ExportedGObject):
>              self.BuddyDisappeared(buddy.object_path())
>              _logger.debug("Buddy left: %s (%s)" % (buddy.props.nick, buddy.props.color))
>  
> +    def _buddy_disappeared_cb(self, buddy):
> +        if buddy.props.valid:
> +            self.BuddyDisappeared(buddy.object_path())
> +            _logger.debug('Buddy left: %s (%s)' % (buddy.props.nick, buddy.props.color))
> +        self._buddies.pop(buddy.props.key)
> +
>      def _contact_offline(self, tp, handle):
>          if not self._handles_buddies[tp].has_key(handle):
>              return
> @@ -151,12 +157,7 @@ class PresenceService(ExportedGObject):
>          key = buddy.props.key
>  
>          # the handle of the buddy for this CM is not valid anymore
> - -        buddy.handles.pop(tp)
> - -        if not buddy.handles:
> - -            if buddy.props.valid:
> - -                self.BuddyDisappeared(buddy.object_path())
> - -                _logger.debug("Buddy left: %s (%s)" % (buddy.props.nick, buddy.props.color))
> - -            self._buddies.pop(key)
> +        buddy.remove_telepathy_handle(tp, handle)
>  
>      def _get_next_object_id(self):
>          """Increment and return the object ID counter."""
> @@ -304,6 +305,42 @@ class PresenceService(ExportedGObject):
>                  return buddy.object_path()
>          raise NotFoundError("The buddy was not found.")
>  
> +    @dbus.service.method(_PRESENCE_INTERFACE, in_signature='sou',
> +                         out_signature='o')
> +    def GetBuddyByTelepathyHandle(self, tp_conn_name, tp_conn_path, handle):
> +        """Get the buddy corresponding to a Telepathy handle.
> +
> +        :Parameters:
> +            `tp_conn_name` : str
> +                The well-known bus name of a Telepathy connection
> +            `tp_conn_path` : dbus.ObjectPath
> +                The object path of the Telepathy connection
> +            `handle` : int or long
> +                The handle of a Telepathy contact on that connection,
> +                of type HANDLE_TYPE_CONTACT. This may not be a
> +                channel-specific handle.
> +        :Returns: the object path of a Buddy
> +        :Raises NotFoundError: if the buddy is not found.
> +        """
> +        for tp, handles in self._handles_buddies.iteritems():
> +            conn = tp.get_connection()
> +            if conn is None:
> +                continue
> +            if (conn.service_name == tp_conn_name
> +                and conn.object_path == tp_conn_path):
> +                buddy = handles.get(handle)
> +                if buddy is not None and buddy.props.valid:
> +                        return buddy.object_path()
> +                # either the handle is invalid, or we don't have a Buddy
> +                # object for that buddy because we don't have all their
> +                # details yet
> +                raise NotFoundError("The buddy %u was not found on the "
> +                                    "connection to %s:%s"
> +                                    % (handle, tp_conn_name, tp_conn_path))
> +        raise NotFoundError("The buddy %u was not found: we have no "
> +                            "connection to %s:%s" % (handle, tp_conn_name,
> +                                                     tp_conn_path))
> +
>      @dbus.service.method(_PRESENCE_INTERFACE, out_signature="o")
>      def GetOwner(self):
>          if not self._owner:
> - -- 
> 1.5.2-rc3.GIT
> 
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.6 (GNU/Linux)
> Comment: OpenPGP key: http://www.pseudorandom.co.uk/2003/contact/ or pgp.net
> 
> iD8DBQFGUYFbWSc8zVUw7HYRAt/HAJwO9KlFyOVh8L3i5t+qmsr19Ag+/gCgjcyv
> E5WdXpj+JeTnlFnCj1wm11o=
> =idu8
> -----END PGP SIGNATURE-----
> ___