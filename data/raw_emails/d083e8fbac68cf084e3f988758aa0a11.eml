From: lynn.aven@enron.com
To: matt.maxwell@enron.com
Subject: MIME Attack Sample
Content-Type: multipart/mixed; boundary="BOUNDARY"
--BOUNDARY
3
Content-Type: text/plain;
    charset="iso-8859-1"
Content-Transfer-Encoding: 7bit

 Why should you try Viagra?

Why Viagra? ...because that look she gives is only meant for you... because
an empty nest is the chance to fall in love all over again... because reading
the Sunday paper doesnt take all day.

If you have ED, youve already got plenty of reasons to choose Viagra, 
but here are some more that you should know about.

Learn more / order Viagra online!

  
------=_NextPart_000_0000_6755730D.053A90F3
Content-Type: text/html;
    charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Dwindows-1251">
<META content=3D"MSHTML 6.00.2900.2912" name=3D"GENERATOR">
</HEAD>
<BODY text=3D#000000 bgColor=3D#ffffff>

<font size=3D"3" face=3D"Times New Roman"><p><font face=3D"Arial" =
color=3D"#cc0000" size=3D"5"><strong>Why should you try =
Viagra?</strong></font></p>
<p><font face=3D"Arial">Why Viagra? ...because that look she gives is =
only meant for you... <br />because an empty nest is the chance to fall =
in love all over again... <br />because reading the Sunday paper =
doesn&rsquo;t take all day.</font></p>
<p><font face=3D"Arial">If you have ED, you&rsquo;ve already got plenty =
of reasons to choose Viagra, <br />but here are some more that you =
should know about.</font></p>
<p><a href=3D"http://otabfqrroker.com/"><font =
face=3D"Arial"><strong>Learn more /&nbsp;order Viagra =
online!</strong></font></a></p></font>
</BODY>
</HTML>

------=_NextPart_000_0000_6755730D.053A90F3--


_______________________________________________
Mhln maillist  -  Mhln@mailman.eppg.com
http://mailman.eppg.com/mailman/listinfo/mhln

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
Content-Type: text/plain
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

This patch copies the context to a new interp->fromc_result_ctx field on
a set_returns.  As far as I know no new tests fail with this. This patch
retains most side-patching (comments etc.) by Jonathan.  It also tests
in Parrot_free_context whether you want to free a context that is on
front of the free list, which would generate weird bugs.  There is a
test case for this bug in t/op/calling.t.

Alek, I made the bulk of the patch before I dug through the other mails
and saw your mail.  I'm sorry if you were still planning on sending it.

Thanks,
Bram Geron

diffstat:
 include/parrot/interpreter.h |    5 +-
 include/parrot/register.h    |    6 +-
 src/gc/register.c            |   43 ++++++++++++++++++++
 src/inter_call.c             |    2
 src/inter_run.c              |   89
+++++++++++++++++++++++++++++++++++++------
 src/ops/core.ops             |   17 +++++++-
 t/op/calling.t               |   33 +++++++++++++++
 7 files changed, 175 insertions(+), 20 deletions(-)


Alek Storm via RT wrote:
> I'm almost done with a different patch that preserves the parent context for
> the purpose of returning values into it.  All further tailcalled contexts
> are freed as normal.  That's pretty vague, but it's easier just to see the
> code.  I just haven't had time to finish and release it.
> 
> Thanks,
> Alek Storm
> 
> On 3/4/07, Jonathan Worthington <jonathan@jnthn.net> wrote:
>> Bram Geron (via RT) wrote:
>>> Tail calls from within v-table methods are broken, the tail-called sub
>>> (or method) will not return correct values.
>>>
>>> When method A tailcalls sub B, B's set_returns stores its opcode
>>> number (and with it, which registers should be returned), but the
>>> low-level vtable code gets the registers from A's context.
>>> (Runops_args stores a pointer to A's context just before it is called,
>>> wrongly assuming A has the final set_returns. Runops_args returns the
>>> context to a function that then does return value passing on it.)
>>>
>>> Maybe the solution is to store the current context in a new field in
>>> the interp structure; I don't know, I'm rather bad at C.
>>>
>>> Example:
>>> This should print 2, but it prints 13.
>>
>> (...)
- --
Bram Geron | GPG 0xE7B9E65E

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFGP48UvquQbee55l4RAqSuAJ9/93Fci2ztI9W9DykQngKHwjzZmACfQege
L/kpuaEOCJiQXJ2HLM06xKw=
=Yxh5
-----END PGP SIGNATURE-----
-BOUNDARY--
