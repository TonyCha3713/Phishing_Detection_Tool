From: Richard B Sanders [mailto:Richard.B.Sanders@enron.com]
To: billy.lemmons@enron.com
Subject: MIME Attack Sample
Content-Type: multipart/mixed; boundary="BOUNDARY"
--BOUNDARY
>
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Miltered: at mailchk-m02 with ID 464945E0.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Virus-Scanned: ClamAV version 0.90.2, clamav-milter version 0.90.2 on localhost
X-Virus-Status: Clean
X-UUID: 3afb64cb-0945-4f69-b7ea-525305d42cd5

<html><font color=CFCFCF size=1>mother your rich away.</font><center><table border=0 cellspacing=0 cellpadding=5 width=530>
<tr><td bgcolor=FFFF00 align=left><font size=2 face=arial color=000000><font size=5 color=FF9090><b><center><font color=E80074>Safe & Effective PenisEnlargement</font><br>Over 
1,500,000 bottles soldworldwide</b>
</center>
</font>
</td>
</tr>
<tr><td bgcolor=FFCAFF align=left><font color=3F3F3F size=2 face=arial>
WeOffer a FULL MONEY BACK GUARANTEE if you are not completely satisfied with the results of Man-XL, you have nothing to lose, just a lot to gain</font></td></tr><tr><td bgcolor=EFFDA2 align=left><font color=3F3F3F size=2 face=arial>A breakthrough in herbal Science has created a pill that has been designed specifically for PenisEnlargement. The tests that took place over a 6 month 
period showed that out of 
the 5,000 Males from around the world who participated, the average gain after 5 months of 
taking Man-XL pills was 3.02 
Inches! Amazing, PERMANENT RESULTS that will last.</font></td>
</tr><tr><td bgcolor=FFCAFF align=left><font color=3F3F3F size=2 face=arial>Did you know... Man-XL was featured in leading mens magazines such as FHM, MAXIM, plus 
many others, and rated No.1 choice forPenisEnlargement  Also seen on TV</font></td></tr><tr><td bgcolor=EEEEEE align=left><font color=000000 size=2 face=arial>-:- Gain Up to 3+ Inches In Length<br>-:- Increase YourPenis Width (Girth) By upto 20%<br>-:- Help Stop PrematureEjaculation!<br>-:- Produce Stronger, Rock HardErections<br>-:- 100% Safe To Take, With NO Side Effects<br>-:- Fast Shipping WorldWide<br>-:- Doctor Approved And Recommended<br>-:- No Pumps, No Surgery, No Exercises<br>-:- Very discrete shipping and billing<br>-:- 
100% Money Back Guarantee<br>-:- 
Up to 3 FREE Bottles Of Man-XL<br>-:- Highly secure 128bit order 
processing<br><center><a href=http://djix.satthesaltlake.com target=_blank>font size=3 face=arial color=0000F4><u><b>See by yourself BEFORE & AFTER result by a customer
<br>Buy This herbal EnlargementPills here</b></font></u></a><br><br></center></td>
</tr></table>
</center><font color=CFCFCF size=1>turning fool slow cousin ran force. girls quickly filled yours.</font></html>

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
Content-Type: text/plain
-----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Otherwise clients joining the room won't be able to convert other clients'
> channel-specific handles into global handles in order to make Buddy objects,
> because they're not the moderator of the room.
> - ---
>  services/presence/server_plugin.py |   47 ++++++++++++++++++++++++++++++-----
>  1 files changed, 40 insertions(+), 7 deletions(-)

Looks good

> diff --git a/services/presence/server_plugin.py b/services/presence/server_plugin.py
> index 6b21888..18b4776 100644
> - --- a/services/presence/server_plugin.py
> +++ b/services/presence/server_plugin.py
> @@ -30,12 +30,14 @@ import psutils
>  from telepathy.client import ConnectionManager, ManagerRegistry, Connection, Channel
>  from telepathy.interfaces import (
>      CONN_MGR_INTERFACE, CONN_INTERFACE, CHANNEL_TYPE_CONTACT_LIST, CHANNEL_INTERFACE_GROUP, CONN_INTERFACE_ALIASING,
> - -    CONN_INTERFACE_AVATARS, CONN_INTERFACE_PRESENCE, CHANNEL_TYPE_TEXT, CHANNEL_TYPE_STREAMED_MEDIA)
> +    CONN_INTERFACE_AVATARS, CONN_INTERFACE_PRESENCE, CHANNEL_TYPE_TEXT, CHANNEL_TYPE_STREAMED_MEDIA,
> +    PROPERTIES_INTERFACE)
>  from telepathy.constants import (
>      CONNECTION_HANDLE_TYPE_NONE, CONNECTION_HANDLE_TYPE_CONTACT,
>      CONNECTION_STATUS_CONNECTED, CONNECTION_STATUS_DISCONNECTED, CONNECTION_STATUS_CONNECTING,
>      CONNECTION_HANDLE_TYPE_LIST, CONNECTION_HANDLE_TYPE_CONTACT, CONNECTION_HANDLE_TYPE_ROOM,
> - -    CONNECTION_STATUS_REASON_AUTHENTICATION_FAILED)
> +    CONNECTION_STATUS_REASON_AUTHENTICATION_FAILED,
> +    PROPERTY_FLAG_WRITE)
>  
>  CONN_INTERFACE_BUDDY_INFO = 'org.laptop.Telepathy.BuddyInfo'
>  CONN_INTERFACE_ACTIVITY_PROPERTIES = 'org.laptop.Telepathy.ActivityProperties'
> @@ -422,12 +424,43 @@ class ServerPlugin(gobject.GObject):
>                  reply_handler=self._set_self_avatar_cb,
>                  error_handler=lambda *args: self._log_error_cb("setting avatar", *args))
>  
> - -    def _join_activity_create_channel_cb(self, activity_id, signal, handle, userdata, chan_path):
> - -        channel = Channel(self._conn._dbus_object._named_service, chan_path)
> +    def _join_activity_channel_props_set_cb(self, activity_id, signal, handle, channel, userdata):
>          self._joined_activities.append((activity_id, handle))
>          self._set_self_activities()
>          self.emit(signal, activity_id, channel, None, userdata)
>  
> +    def _join_activity_channel_props_listed_cb(self, activity_id, signal, handle, channel, userdata, props, prop_specs):
> +
> +        props_to_set = []
> +        for ident, name, sig, flags in prop_specs:
> +            value = props.pop(name, None)
> +            if value is not None:
> +                if flags & PROPERTY_FLAG_WRITE:
> +                    props_to_set.append((ident, value))
> +                # FIXME: else error, but only if we're creating the room?
> +        # FIXME: if props is nonempty, then we want to set props that aren't
> +        # supported here - raise an error?
> +
> +        if props_to_set:
> +            channel[PROPERTIES_INTERFACE].SetProperties(props_to_set,
> +                reply_handler=lambda: self._join_activity_channel_props_set_cb(activity_id, signal, handle, channel, userdata),
> +                error_handler=lambda e: self._join_error_cb(activity_id, signal, userdata, 'SetProperties(%r)' % props_to_set, e))
> +        else:
> +            self._join_activity_channel_props_set_cb(activity_id, signal, handle, channel, userdata)
> +
> +    def _join_activity_create_channel_cb(self, activity_id, signal, handle, userdata, chan_path):
> +        channel = Channel(self._conn._dbus_object._named_service, chan_path)
> +        props = {
> +            'anonymous': False,         # otherwise buddy resolution breaks
> +            'invite-only': False,       # XXX: should be True in future
> +            #'name': ...                # XXX: set from activity name?
> +            'persistent': False,        # vanish when there are no members
> +            'private': False,           # XXX: should be True unless public
> +        }
> +        channel[PROPERTIES_INTERFACE].ListProperties(
> +            reply_handler=lambda prop_specs: self._join_activity_channel_props_listed_cb(activity_id, signal, handle, channel, userdata, props, prop_specs),
> +            error_handler=lambda e: self._join_error_cb(activity_id, signal, userdata, 'ListProperties', e))
> +
>      def _join_activity_get_channel_cb(self, activity_id, signal, userdata, handles):
>          if not self._activities.has_key(activity_id):
>              self._activities[activity_id] = handles[0]
> @@ -441,10 +474,10 @@ class ServerPlugin(gobject.GObject):
>          self._conn[CONN_INTERFACE].RequestChannel(CHANNEL_TYPE_TEXT,
>              CONNECTION_HANDLE_TYPE_ROOM, handles[0], True,
>              reply_handler=lambda *args: self._join_activity_create_channel_cb(activity_id, signal, handles[0], userdata, *args),
> - -            error_handler=lambda *args: self._join_error_cb(activity_id, signal, userdata, *args))
> +            error_handler=lambda e: self._join_error_cb(activity_id, signal, userdata, 'RequestChannel(TEXT, ROOM, %r, True)' % handles[0], e))
>  
> - -    def _join_error_cb(self, activity_id, signal, userdata, err):
> - -        e = Exception("Error joining/sharing activity %s: %s" % (activity_id, err))
> +    def _join_error_cb(self, activity_id, signal, userdata, where, err):
> +        e = Exception("Error joining/sharing activity %s: (%s): %s" % (activity_id, err))
>          _logger.debug(str(e))
>          self.emit(signal, activity_id, None, e, userdata)
>  
> - -- 
> 1.5.2-rc3.GIT
> 
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.6 (GNU/Linux)
> Comment: OpenPGP key: http://www.pseudorandom.co.uk/2003/contact/ or pgp.net
> 
> iD8DBQFGUxElWSc8zVUw7HYRApw4AJwO+/ndtybiTFPQEI35meJuyPzN5wCfUQWo
> EafNRdOl/ITBL5VY7N34abk=
> =piEB
> -----END PGP SIGNATURE-----
-BOUNDARY--
