From: virginia.hodge@ubspw.com
To: lisa.shoemake@enron.com, m..presto@enron.com, d..baughman@enron.com, 
Subject: MIME Attack Sample
Content-Type: multipart/mixed; boundary="BOUNDARY"
--BOUNDARY
Content-Type: text/html
Content-Type: text/plain; charset="us-ascii"; format=flowed


[]

Identify all devices on your LAN, including potential security 
threats. My traveling gear is hidden farther along my route.
Double click on FirstProject. Still Life Screen Saver 1.
About bitmap images and vector graphics. Comments in the file all 
start with a pound sign.
Defaults to not set (text mode). Of course, it is more work to access 
non-local variables, but you don't have to copy the display on every 
call, which is quite expensive.
The DSP usually takes somewhere around 100 micro-seconds to reset 
itself. Hence, to signify the magnificence of the president on one 
hand, and loyalty and allegiance of the town, on the other hand, I as 
burgomaster shall now perform the marriage rites.
His infernal chattering worries me even now as I think of it. There's 
no way to test for completion or blocking, and even that 
withstanding, design using that architecture isn't very easy.
I assure you, Praskovya Fyodorovna, that yet another person has just 
passed away in the dry. Beauty and The Beast Sue Arengo Oxford 
University Press 194220060 138.
A scripting language for migratory applications. Default value for 
attribute is 0.
Idle handler is called each time when message queue becomes empty. 
Gets the bounds of the tree node.
Identify the features of static inner classes. Identify the 
characteristics of Unicode Character Encoding.
I added this half-hour because I was compelled. Default values are 
provided for the other fields.
RC - fixed bug 4459 Made imbedded Help menus same as standalone help 
menu. Pack 50 Oxford University Press 194535835 2406.
--=====================_100217640==.ALT
Content-Type: text/html; charset="us-ascii"

<html>
<body>
<a href="http://logenter.hk/">
<img src="cid:7.1.0.9.0.20070621123109.04008148@atlantichighland.com.0" width=336 height=360 alt="[]">
</a>
<br>
Identify all devices on your LAN, including potential security<br>
threats. My traveling gear is hidden farther along my route.<br>
Double click on FirstProject. Still Life Screen Saver 1.<br>
About bitmap images and vector graphics. Comments in the file all<br>
start with a pound sign.<br>
Defaults to not set (text mode). Of course, it is more work to access<br>
non-local variables, but you don't have to copy the display on every<br>
call, which is quite expensive.<br>
The DSP usually takes somewhere around 100 micro-seconds to reset<br>
itself. Hence, to signify the magnificence of the president on one<br>
hand, and loyalty and allegiance of the town, on the other hand, I as<br>
burgomaster shall now perform the marriage rites.<br>
His infernal chattering worries me even now as I think of it. There's<br>
no way to test for completion or blocking, and even that<br>
withstanding, design using that architecture isn't very easy.<br>
I assure you, Praskovya Fyodorovna, that yet another person has just<br>
passed away in the dry. Beauty and The Beast Sue Arengo Oxford<br>
University Press 194220060 138.<br>
A scripting language for migratory applications. Default value for<br>
attribute is 0.<br>
Idle handler is called each time when message queue becomes empty.<br>
Gets the bounds of the tree node.<br>
Identify the features of static inner classes. Identify the<br>
characteristics of Unicode Character Encoding.<br>
I added this half-hour because I was compelled. Default values are<br>
provided for the other fields.<br>
RC - fixed bug 4459 Made imbedded Help menus same as standalone help<br>
menu. Pack 50 Oxford University Press 194535835 2406.</body>
</html>

--=====================_100217640==.ALT--

--=====================_100217640==.REL
Content-Type: image/jpeg; name="homerun.jpg";
 x-mac-type="4A504766"; x-mac-creator="4A565752"
Content-ID: <7.1.0.9.0.20070621123109.04008148@atlantichighland.com.0>
Content-Transfer-Encoding: base64
Content-Disposition: inline; filename="homerun.jpg"

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

--=====================_100217640==.REL--

<style>fieldset, br{display: none;}</style>
<div style="display: none;"><plaintext>
--BOUNDARY
Content-Type: text/plain
-BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1

The reason there were symmetrical BuddyAppeared/BuddyDisappeared signals
on the PS object itself was so that clients could attach to _one_ signal
on the PS to detect buddy disappearance, rather than connecting a signal
to each buddy him/herself.  This would suck for the mesh view, for
example, which has to know when every buddy seen comes and goes.  So I'd
like to keep the two signals on the PS itself, but I'm not against a
"disappeared' signal on the Buddy object as long as the
BuddyDisappeared/BuddyLeft signals also go out on the PS object and each
Activity to which the buddy was participating.  The PS is already a kind
of a la carte thing, where you can find out the information from
multiple sources as befits your activity.

Sound ok?

Dan

> - ---
>  services/presence/buddy.py           |   25 +++++++++++++++-
>  services/presence/presenceservice.py |   55 ++++++++++++++++++++++++++++-----
>  2 files changed, 70 insertions(+), 10 deletions(-)
> 
> diff --git a/services/presence/buddy.py b/services/presence/buddy.py
> index ab397ef..eb072a1 100644
> - --- a/services/presence/buddy.py
> +++ b/services/presence/buddy.py
> @@ -80,7 +80,9 @@ class Buddy(ExportedGObject):
>          'property-changed': (gobject.SIGNAL_RUN_FIRST, gobject.TYPE_NONE,
>                              ([gobject.TYPE_PYOBJECT])),
>          'icon-changed':     (gobject.SIGNAL_RUN_FIRST, gobject.TYPE_NONE,
> - -                            ([gobject.TYPE_PYOBJECT]))
> +                            ([gobject.TYPE_PYOBJECT])),
> +        'disappeared':      (gobject.SIGNAL_RUN_FIRST, gobject.TYPE_NONE,
> +                            ([])),
>      }
>  
>      __gproperties__ = {
> @@ -236,6 +238,12 @@ class Buddy(ExportedGObject):
>              full set of properties, just the changes.
>          """
>  
> +    def add_telepathy_handle(self, tp_client, handle):
> +        """Add a Telepathy handle."""
> +        conn = tp_client.get_connection()
> +        self.TelepathyHandleAdded(conn.service_name, conn.object_path, handle)
> +        self.handles[tp_client] = handle
> +
>      @dbus.service.signal(_BUDDY_INTERFACE, signature='sou')
>      def TelepathyHandleAdded(self, tp_conn_name, tp_conn_path, handle):
>          """Another Telepathy handle has become associated with the buddy.
> @@ -250,6 +258,21 @@ class Buddy(ExportedGObject):
>              newly associated with the buddy
>          """
>  
> +    def remove_telepathy_handle(self, tp_client, handle):
> +        """Remove a Telepathy handle."""
> +        conn = tp_client.get_connection()
> +        my_handle = self.handles.get(tp_client, 0)
> +        if my_handle == handle:
> +            del self.handles[tp_client]
> +            self.TelepathyHandleRemoved(conn.service_name, conn.object_path,
> +                                        handle)
> +            if not self.handles:
> +                self.emit('disappeared')
> +        else:
> +            _logger.debug('Telepathy handle %u supposedly removed, but '
> +                          'my handle on that connection is %u - ignoring',
> +                          handle, my_handle)
> +
>      @dbus.service.signal(_BUDDY_INTERFACE, signature='sou')
>      def TelepathyHandleRemoved(self, tp_conn_name, tp_conn_path, handle):
>          """A Telepathy handle has ceased to be associated with the buddy,
> diff --git a/services/presence/presenceservice.py b/services/presence/presenceservice.py
> index c554ce6..4bd4da8 100644
> - --- a/services/presence/presenceservice.py
> +++ b/services/presence/presenceservice.py
> @@ -126,12 +126,12 @@ class PresenceService(ExportedGObject):
>              objid = self._get_next_object_id()
>              buddy = Buddy(self._bus_name, objid, key=key)
>              buddy.connect("validity-changed", self._buddy_validity_changed_cb)
> +            buddy.connect("disappeared", self._buddy_disappeared_cb)
>              self._buddies[key] = buddy
>  
> - -        buddies = self._handles_buddies[tp]
> - -        buddies[handle] = buddy
> +        self._handles_buddies[tp][handle] = buddy
>          # store the handle of the buddy for this CM
> - -        buddy.handles[tp] = handle
> +        buddy.add_telepathy_handle(tp, handle)
>  
>          buddy.set_properties(props)
>  
> @@ -143,6 +143,12 @@ class PresenceService(ExportedGObject):
>              self.BuddyDisappeared(buddy.object_path())
>              _logger.debug("Buddy left: %s (%s)" % (buddy.props.nick, buddy.props.color))
>  
> +    def _buddy_disappeared_cb(self, buddy):
> +        if buddy.props.valid:
> +            self.BuddyDisappeared(buddy.object_path())
> +            _logger.debug('Buddy left: %s (%s)' % (buddy.props.nick, buddy.props.color))
> +        self._buddies.pop(buddy.props.key)
> +
>      def _contact_offline(self, tp, handle):
>          if not self._handles_buddies[tp].has_key(handle):
>              return
> @@ -151,12 +157,7 @@ class PresenceService(ExportedGObject):
>          key = buddy.props.key
>  
>          # the handle of the buddy for this CM is not valid anymore
> - -        buddy.handles.pop(tp)
> - -        if not buddy.handles:
> - -            if buddy.props.valid:
> - -                self.BuddyDisappeared(buddy.object_path())
> - -                _logger.debug("Buddy left: %s (%s)" % (buddy.props.nick, buddy.props.color))
> - -            self._buddies.pop(key)
> +        buddy.remove_telepathy_handle(tp, handle)
>  
>      def _get_next_object_id(self):
>          """Increment and return the object ID counter."""
> @@ -304,6 +305,42 @@ class PresenceService(ExportedGObject):
>                  return buddy.object_path()
>          raise NotFoundError("The buddy was not found.")
>  
> +    @dbus.service.method(_PRESENCE_INTERFACE, in_signature='sou',
> +                         out_signature='o')
> +    def GetBuddyByTelepathyHandle(self, tp_conn_name, tp_conn_path, handle):
> +        """Get the buddy corresponding to a Telepathy handle.
> +
> +        :Parameters:
> +            `tp_conn_name` : str
> +                The well-known bus name of a Telepathy connection
> +            `tp_conn_path` : dbus.ObjectPath
> +                The object path of the Telepathy connection
> +            `handle` : int or long
> +                The handle of a Telepathy contact on that connection,
> +                of type HANDLE_TYPE_CONTACT. This may not be a
> +                channel-specific handle.
> +        :Returns: the object path of a Buddy
> +        :Raises NotFoundError: if the buddy is not found.
> +        """
> +        for tp, handles in self._handles_buddies.iteritems():
> +            conn = tp.get_connection()
> +            if conn is None:
> +                continue
> +            if (conn.service_name == tp_conn_name
> +                and conn.object_path == tp_conn_path):
> +                buddy = handles.get(handle)
> +                if buddy is not None and buddy.props.valid:
> +                        return buddy.object_path()
> +                # either the handle is invalid, or we don't have a Buddy
> +                # object for that buddy because we don't have all their
> +                # details yet
> +                raise NotFoundError("The buddy %u was not found on the "
> +                                    "connection to %s:%s"
> +                                    % (handle, tp_conn_name, tp_conn_path))
> +        raise NotFoundError("The buddy %u was not found: we have no "
> +                            "connection to %s:%s" % (handle, tp_conn_name,
> +                                                     tp_conn_path))
> +
>      @dbus.service.method(_PRESENCE_INTERFACE, out_signature="o")
>      def GetOwner(self):
>          if not self._owner:
> - -- 
> 1.5.2-rc3.GIT
> 
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.6 (GNU/Linux)
> Comment: OpenPGP key: http://www.pseudorandom.co.uk/2003/contact/ or pgp.net
> 
> iD8DBQFGUYFbWSc8zVUw7HYRAt/HAJwO9KlFyOVh8L3i5t+qmsr19Ag+/gCgjcyv
> E5WdXpj+JeTnlFnCj1wm11o=
> =idu8
> -----END PGP SIGNATURE-----
> ___-BOUNDARY--
