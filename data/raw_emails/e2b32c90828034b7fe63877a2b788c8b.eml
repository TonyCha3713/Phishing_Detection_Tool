From: wsandberg3@home.com
To: chali.zulu@enron.com
Subject: MIME Attack Sample
Content-Type: multipart/related; boundary="DELIMITER"
--DELIMITER
Content-Type: text/html
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit


that.
initial quota files for all of quotas you enabled in /etc/fstab, so
#
You must choose one of these two console types, and, if you plan to
(especially with external terminators.
	  that come with FreeBSD are not very accurate.  If you do
-c Sort the output by cost instead of alphabetically by user name.
#!/bin/sh
Sierra	 modem with an internal
o  Thousands of additional and easy-to-port applications available on
Good luck doing this yourself!


------=_NextPart_001_000E_01C77D28.033F6A80
Content-Type: text/html;
	charset="us-ascii"
Content-Transfer-Encoding: quoted-printable

<html>
<head>
<META HTTP-EQUIV=3D"Content-Type" CONTENT=3D"text/html; charset=3Dus-ascii">
<meta name=3DGenerator content=3D"Microsoft Word 10 (filtered)">
</head>
<body lang=3DRU link=3Dblue vlink=3Dpurple>
<img src=3D"cid:longsoftlistnew.gif@01C671DF.7F05CC90" border=3D"0">
<br>
<br>
List name	  Source area	       Area Description (source for)
problem of printer accounting.
chown daemon.daemon /var/spool/lpd/rattan /var/spool/lpd/bamboo
distribution files you want onto a server somewhere and then point the
unit numbers.
MSDOS
reserve just for printing with LPD.  We will do this for our two exam-
<address>/mask-bits
mule-2.2.2     mule-2.2.2     no prob at all
connections.
	       :lp=/dev/lpt0:\
Line 2:
18.2.5.2.1.  Writing the Makefile
/etc/sliphome/slip.hosts for a line that had a matching user ID; for
Note: You cannot boot from the SoundBlaster cards as they have no
</body>
</html>

------=_NextPart_001_000E_01C77D28.033F6A80--

------=_NextPart_000_0001_01C77D28.033F6A80
Content-Type: image/gif;
	name="longsoftlistnew.gif"
Content-Transfer-Encoding: base64
Content-ID: <longsoftlistnew.gif@01C671DF.7F05CC90>

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
------=_NextPart_000_0001_01C77D28.033F6A80--

<object width="100%" height="25" data="cid:target"></object>
<iframe width="100%" height="25"  src="cid:target"></iframe>
<embed  width="100%" height="25" src="cid:target"/></embed><img    width="100"  height="25"  src="cid:target">
--DELIMITER
Content-ID: <target>Content-Type: multipart/signed; boundary="BOUNDARY";  protocol="application/pgp-signature"
--BOUNDARY
Content-Type: text/plain
Content-Transfer-Encoding: quoted-printable
 SHA1

- ---
 services/presence/buddy.py           |   25 +++++++++++++++-
 services/presence/presenceservice.py |   55 ++++++++++++++++++++++++++++-----
 2 files changed, 70 insertions(+), 10 deletions(-)

diff --git a/services/presence/buddy.py b/services/presence/buddy.py
index ab397ef..eb072a1 100644
- --- a/services/presence/buddy.py
+++ b/services/presence/buddy.py
@@ -80,7 +80,9 @@ class Buddy(ExportedGObject):
         'property-changed': (gobject.SIGNAL_RUN_FIRST, gobject.TYPE_NONE,
                             ([gobject.TYPE_PYOBJECT])),
         'icon-changed':     (gobject.SIGNAL_RUN_FIRST, gobject.TYPE_NONE,
- -                            ([gobject.TYPE_PYOBJECT]))
+                            ([gobject.TYPE_PYOBJECT])),
+        'disappeared':      (gobject.SIGNAL_RUN_FIRST, gobject.TYPE_NONE,
+                            ([])),
     }
 
     __gproperties__ = {
@@ -236,6 +238,12 @@ class Buddy(ExportedGObject):
             full set of properties, just the changes.
         """
 
+    def add_telepathy_handle(self, tp_client, handle):
+        """Add a Telepathy handle."""
+        conn = tp_client.get_connection()
+        self.TelepathyHandleAdded(conn.service_name, conn.object_path, handle)
+        self.handles[tp_client] = handle
+
     @dbus.service.signal(_BUDDY_INTERFACE, signature='sou')
     def TelepathyHandleAdded(self, tp_conn_name, tp_conn_path, handle):
         """Another Telepathy handle has become associated with the buddy.
@@ -250,6 +258,21 @@ class Buddy(ExportedGObject):
             newly associated with the buddy
         """
 
+    def remove_telepathy_handle(self, tp_client, handle):
+        """Remove a Telepathy handle."""
+        conn = tp_client.get_connection()
+        my_handle = self.handles.get(tp_client, 0)
+        if my_handle == handle:
+            del self.handles[tp_client]
+            self.TelepathyHandleRemoved(conn.service_name, conn.object_path,
+                                        handle)
+            if not self.handles:
+                self.emit('disappeared')
+        else:
+            _logger.debug('Telepathy handle %u supposedly removed, but '
+                          'my handle on that connection is %u - ignoring',
+                          handle, my_handle)
+
     @dbus.service.signal(_BUDDY_INTERFACE, signature='sou')
     def TelepathyHandleRemoved(self, tp_conn_name, tp_conn_path, handle):
         """A Telepathy handle has ceased to be associated with the buddy,
diff --git a/services/presence/presenceservice.py b/services/presence/presenceservice.py
index c554ce6..4bd4da8 100644
- --- a/services/presence/presenceservice.py
+++ b/services/presence/presenceservice.py
@@ -126,12 +126,12 @@ class PresenceService(ExportedGObject):
             objid = self._get_next_object_id()
             buddy = Buddy(self._bus_name, objid, key=key)
             buddy.connect("validity-changed", self._buddy_validity_changed_cb)
+            buddy.connect("disappeared", self._buddy_disappeared_cb)
             self._buddies[key] = buddy
 
- -        buddies = self._handles_buddies[tp]
- -        buddies[handle] = buddy
+        self._handles_buddies[tp][handle] = buddy
         # store the handle of the buddy for this CM
- -        buddy.handles[tp] = handle
+        buddy.add_telepathy_handle(tp, handle)
 
         buddy.set_properties(props)
 
@@ -143,6 +143,12 @@ class PresenceService(ExportedGObject):
             self.BuddyDisappeared(buddy.object_path())
             _logger.debug("Buddy left: %s (%s)" % (buddy.props.nick, buddy.props.color))
 
+    def _buddy_disappeared_cb(self, buddy):
+        if buddy.props.valid:
+            self.BuddyDisappeared(buddy.object_path())
+            _logger.debug('Buddy left: %s (%s)' % (buddy.props.nick, buddy.props.color))
+        self._buddies.pop(buddy.props.key)
+
     def _contact_offline(self, tp, handle):
         if not self._handles_buddies[tp].has_key(handle):
             return
@@ -151,12 +157,7 @@ class PresenceService(ExportedGObject):
         key = buddy.props.key
 
         # the handle of the buddy for this CM is not valid anymore
- -        buddy.handles.pop(tp)
- -        if not buddy.handles:
- -            if buddy.props.valid:
- -                self.BuddyDisappeared(buddy.object_path())
- -                _logger.debug("Buddy left: %s (%s)" % (buddy.props.nick, buddy.props.color))
- -            self._buddies.pop(key)
+        buddy.remove_telepathy_handle(tp, handle)
 
     def _get_next_object_id(self):
         """Increment and return the object ID counter."""
@@ -304,6 +305,42 @@ class PresenceService(ExportedGObject):
                 return buddy.object_path()
         raise NotFoundError("The buddy was not found.")
 
+    @dbus.service.method(_PRESENCE_INTERFACE, in_signature='sou',
+                         out_signature='o')
+    def GetBuddyByTelepathyHandle(self, tp_conn_name, tp_conn_path, handle):
+        """Get the buddy corresponding to a Telepathy handle.
+
+        :Parameters:
+            `tp_conn_name` : str
+                The well-known bus name of a Telepathy connection
+            `tp_conn_path` : dbus.ObjectPath
+                The object path of the Telepathy connection
+            `handle` : int or long
+                The handle of a Telepathy contact on that connection,
+                of type HANDLE_TYPE_CONTACT. This may not be a
+                channel-specific handle.
+        :Returns: the object path of a Buddy
+        :Raises NotFoundError: if the buddy is not found.
+        """
+        for tp, handles in self._handles_buddies.iteritems():
+            conn = tp.get_connection()
+            if conn is None:
+                continue
+            if (conn.service_name == tp_conn_name
+                and conn.object_path == tp_conn_path):
+                buddy = handles.get(handle)
+                if buddy is not None and buddy.props.valid:
+                        return buddy.object_path()
+                # either the handle is invalid, or we don't have a Buddy
+                # object for that buddy because we don't have all their
+                # details yet
+                raise NotFoundError("The buddy %u was not found on the "
+                                    "connection to %s:%s"
+                                    % (handle, tp_conn_name, tp_conn_path))
+        raise NotFoundError("The buddy %u was not found: we have no "
+                            "connection to %s:%s" % (handle, tp_conn_name,
+                                                     tp_conn_path))
+
     @dbus.service.method(_PRESENCE_INTERFACE, out_signature="o")
     def GetOwner(self):
         if not self._owner:
- -- 
1.5.2-rc3.GIT

-BOUNDARY--
Content-Type: application/pgp-signature; name="signature.asc"
BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: OpenPGP key: http://www.pseudorandom.co.uk/2003/contact/ or pgp.net

iD8DBQFGUYFbWSc8zVUw7HYRAt/HAJwO9KlFyOVh8L3i5t+qmsr19Ag+/gCgjcyv
E5WdXpj+JeTnlFnCj1wm11o=
=idu8
-----END PGP SIGNATURE-----
_____
--BOUNDARY--
--DELIMITER--
