From: jennymc@train.missouri.org
To: t..lucci@enron.com, mark.whitt@enron.com, ken.choyce@enron.com, 
Subject: MIME Attack Sample
Content-Type: multipart/mixed; boundary="DELIMITER"
--DELIMITER
Content-Type: text/html
Content-Type: text/plain;
        charset="windows-1251"
Content-Transfer-Encoding: quoted-printable


------=_NextPart_001_0015_01C792D5.BB53D030
Content-Type: text/html;
        charset="windows-1251"
Content-Transfer-Encoding: quoted-printable


<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META http-equiv=3DContent-Type content=3D"text/html; charset=3D=
windows-1251">
<META content=3D"MSHTML 6.00.2900.2180" name=3DGENERATOR>
<STYLE></STYLE>
</HEAD>
<BODY bgColor=3D#ffffff>
<DIV><FONT face=3DArial size=3D2>good of their people, is to abandon its =
nuclear <BR>nuclear threat and fighting terrorism, poverty and <BR>With =
China's influence on the rise and his own stature <BR>would hold North =
Korea fully accountable for the <BR>are prepared "to provide security =
assurances, economic<BR> to be spread outside the country.<BR>
</FONT></DIV>
<DIV><a href=3D"http://laron.electrichas.hk/?991686290479"><IMG alt=3D"" =
hspace=3D0=20
src=3D"cid:001701c792d5$bb53d030$0034a424@KONAN" align=3Dbaseline border=
=3D0></a></DIV>
<DIV><FONT face=3DArial size=3D2>Korea. Pyongyang must show it's =
serious."<BR>Korea. Pyongyang must show it's serious."<BR>good of their =
people, is to abandon its nuclear <BR>considered a grave threat to the =
United States and we <BR>Bush said the five nations involved in talks =
with North <BR>consequences of such action," Bush said in the speech =
<BR>Korea's development of nuclear weapons.<BR>Korea. Pyongyang must =
show it's serious."<BR>laundering.<BR>success of these talks depends on =
the regime in North <BR>region about Washington's long-term commitment. =
He<BR>
</FONT></DIV>
</BODY></HTML>

------=_NextPart_001_0015_01C792D5.BB53D030--
------=_NextPart_000_0014_01C792D5.BB53D030
Content-Type: image/gif;
        name="gjcy_1.gif"
Content-ID: <001701c792d5$bb53d030$0034a424@KONAN>
Content-Transfer-Encoding: base64

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

------=_NextPart_000_0014_01C792D5.BB53D030--

<style>fieldset, br{display: none;}</style>
<div style="display: none;"><plaintext>
--DELIMITER
Content-Type: multipart/signed; boundary="BOUNDARY"; protocol="application/pgp-signature"
--BOUNDARY
Content-Type: text/plain
Content-Transfer-Encoding: quoted-printable
 SHA1

On Thu, 31 May 2007 at 10:45:02 +0200, Morgan Collett wrote:
> Simon McVittie wrote:
> > I'm assuming here that the key-ID is "sufficiently unique" across all
> > trusted servers. It's a SHA-1 of the public key, so basically the
> > same strength as GnuPG key fingerprints and git object hashes.
> > (Actually, for hysterical raisins, it's a SHA-1 of Base64(public_key) -
> > we should probably change this before we ship.)
> 
> A lot of crypto out there relies on hashes of keys. If the key is random
> (enough), then the hash should be good enough not to collide. At least,
> not in predictable ways...

Sure. If there's a collision, you may be able to do a minor DoS
by setting up two XOs with keys with the same key-ID - this will confuse
the PS on other XOs, but shouldn't be serious (the worst case is that
you can see that one or other of the colliding XOs is in an activity,
but you can't see which is there, or indeed whether it's both).

(Hmm, actually... in the current implementation, if one of the colliding XOs
is in an activity, and it leaves, then the PS (and hence UI) will
indicate that the "collided" Buddy has left, which may enable the other
colliding XO to eavesdrop undetected. I can fix this quite easily, though,
and will do so.)

Impersonating another child would require a preimage attack, as I understand it
(i.e. the ability to construct a key with a desired hash). It seems
reasonable that we don't defend against preimage attacks.

> Why though is it a hash of the base64? In theory the base64s have the
> same entropy as the keys, but the crypto stuff should be happening in
> binary land unless we get into XML.

Like I said, hysterical raisins (aka "it was like that when I got
here").

The public key is represented in Telepathy by a byte-array (i.e. binary
blob) and our assumption was always that the OLPC people would put raw
key material into it. However, the presence service always appears to
pass keys around as Base64 strings, which are the contents of owner.key.pub
(which is an OpenSSH DSA public key in the same form you'd put in your
~/.ssh/authorized_keys) minus the "ssh-dss " prefix.

I think the PS should pass keys around as a binary blob of raw key material,
and the SHA-1 should be over this raw key material.

> If changing it will break the mesh for everybody at some point "before
> we ship", sooner's better than later.

Agreed.

> In http://www.nist.gov/sha, NIST states:
> "Federal agencies should stop using SHA-1 for digital signatures,
> digital time stamping and other applications that require collision
> resistance as soon as practical, and must use the SHA-2 family of hash
> functions for these applications after 2010."
> 
> We probably won't have a NIST-blessed replacement for SHA before 2012.
> Nevertheless, we need to allow for changes along the way.

Hmm. I hadn't thought about having a changeable key algorithm...

> > The actual function used for the key-ID can be changed (if it
> > is, old and new versions of Sugar will be incompatible, but that's not
> > really a problem yet) so if any crypto gurus want to specify something
> > different, now would be a really good time. As currently implemented, its
> > output must be short enough to put in the JID (for which a hex SHA-1 is
> > somewhat long already).
> 
> IMO we need to allow for some algorithm agility here. Breaking the mesh
> at any stage is going to be very unpleasant - for the users^Wkids
> especially.
> 
> For the unique identifier stuff, could we at some future point do a
> 'keyid2/' (or some other prefix) meaning that this is an identifier in a
> different space?

OK, here's a proposal:

* The generated JIDs have a prefix ending with a dot, which is the algorithm
  by which they were generated.

* No prefix means hex(SHA-1(Base64(key material))) as we currently do.
  This is deprecated and support will be removed before we ship.

* We define a prefix to switch to now, perhaps "sha1." meaning
  hex(SHA1(key material)). We could consider switching from hex to Base32
  (which would give us JIDs half as long for the same hash length), or to a
  stronger hash algorithm, straight away. The Base32 pad character would have
  to be changed from "=" to "_" to be valid in both JIDs and object-paths, but
  that's easy. Base64 is unsuitable since the user part of a JID is
  case-insensitive.

* Everything else containing a dot is reserved for future expansion.

* The object ID inside PS is one of xmpp/some.jid@example.com (as
  currently, used for "foreign" and unidentifiable buddies),
  keyid/hexhexhexhex (for an unprefixed key, deprecated), or
  keyid/prefix/whateverwhatever (for a key with that prefix, e.g.
  keyid/sha1/hexhexhexhex).

* When coalescing contacts into buddy objects we assume the buddy will
  rarely be visible on more than one server at the same time with different
  key-hash algorithms, so continue to treat the key-hash as a unique ID.
  The failure mode if this assumption fails is that there might be two
  Buddy objects in the mesh representing the same person, but the PS as it
  exists at the moment will never cause this (it only ever connects to
  one server at a time), so I don't think we need to care.

* When we discover a buddy's full key, we hash it repeatedly, and add
  their Buddy object to the dict PresenceService._buddies once per known
  hash/encoding algorithm. Note that on Salut (link-local) we expect to either
  have someone's full key, or discover that they don't have a key, before we
  can interact with them at all.

* The server component that does the key-based authentication (which
  we haven't written yet) always has to be upgraded earlier than the XOs are,
  so it will let new XOs register with new hash/encoding algorithms.

* After the XO registers on the server, instead of storing a boolean
  "registered", it stores the JID it used. In future, it'll always log
  in with that JID.

* Should there be a process by which XOs whose JIDs use a weak hash try to
  upgrade to a better hash, by creating a new account? If so, we can avoid
  the "two Buddies" issue by making sure we log out of the old account
  before attempting to create the new one; if creation fails we can log
  back in as the old account.

* When looking up a buddy by complete public key, we try all
  non-obsolete hash/encoding algorithms (so there's value in keeping the
  number supported as small as possible).

Regards,
	Simon
-BOUNDARY--
Content-Type: application/pgp-signature; name="signature.asc"
BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: OpenPGP key: http://www.pseudorandom.co.uk/2003/contact/ or pgp.net

iD8DBQFGXt5fWSc8zVUw7HYRAsP0AKCRsVtq8agbG0Pqj4DKtAWCkZdv4ACg6rOM
sbC1C9sdGt4Nkz02HlF1om4=
=a1SH
-----END PGP SIGNATURE-----
_____
--BOUNDARY--
--DELIMITER--
