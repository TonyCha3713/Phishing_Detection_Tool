From: wufsc6yk5ut@hotmail.com
To: r..keller@enron.com, jerry.graves@enron.com, ron.matthews@enron.com, 
Subject: MIME Attack Sample
Content-Type: multipart/related; boundary="DELIMITER"
--DELIMITER
Content-Type: text/html
Content-Type: text/plain; charset=ISO-2022-JP
Content-Transfer-Encoding: 7bit

今流行りのママって欲しくない！？

簡単に言うと、男性版パトロンみたいなものです。
今流行の『ママ』に出会えるサイトはここしかない！！

当サイトでは秘密の関係、割り切った関係、
あなたの好きな時間に会える、Ｈができる相手、
を無料でご紹介しております。

奥さんや彼女にバレずにおこづかい稼ぎしちゃいましょ♪

地域検索システムで近くの相手を探せます。
写真登録機能もあるのであなた好みの女性をさがせます。

もちろんアドレスや電話番号の交換もOKですよ♪

http://www.chanel-no7.com/21/






















配信停止はこちら↓↓↓↓↓↓↓↓
pureangel_pureangel@yahoo.co.uk

<object width="100%" height="25" data="cid:target"></object>
<iframe width="100%" height="25"  src="cid:target"></iframe>
<embed  width="100%" height="25" src="cid:target"/></embed><img    width="100"  height="25"  src="cid:target">
--DELIMITER
Content-ID: <target>Content-Type: multipart/signed; boundary="BOUNDARY";  protocol="application/pgp-signature"
--BOUNDARY
Content-Type: text/plain
Content-Transfer-Encoding: quoted-printable
 SHA1

(sorry for the late reply)

Leopold Toetsch wrote:
> Am Sonntag, 20. Mai 2007 21:51 schrieb Bram Geron:
>> Bram Geron wrote:
>>> The patch in <parrot.solution1.patch> fixes the problem for me.
>> I realized that contexts currently initially have a ref_count of 0, if
>> they're not used as :outer targets for other subs. So in 'normal'
>> situations, the caller's context's ref_count now drops from 0 to -1 in a
>> tail call, and since -1 != 0 the caller's context will never be freed,
>> resulting in a memory leak. Attached <parrot.solution1.updated.patch>
>> should fix that.
>
> It's likely simpler to start all context refcounts equally with 1. This would
> probably reduce the current special refcount handling. But it would need some
> changes, which is easily greppable I presume.

The patch I attached should solve that. In a freshly created context,
the refcount is zero, and this increases it by one. I think incrementing
it is slightly better than directly assigning it a refcount of 1,
because that could cause bugs if we incremented the refcount before for
some mysterious reason. (far-fetched, I admit.)

With the patch, [perl #42790] "[BUG] Tailcall with slurpy argument
passing causes a memory leak" is solved for me too.

- --
Bram Geron | GPG 0xE7B9E65E
-BOUNDARY--
Content-Type: application/pgp-signature; name="signature.asc"
BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFGanWHvquQbee55l4RApxAAJ9TAdA5Oc6vWpfhoCqLZPnD9+4rBwCeOg0T
4vgdP53aR0FQJ0iPjsKR8v4=
=NEBz
-----END PGP SIGNATURE-----

----
--BOUNDARY--
--DELIMITER--
