From: info@nationalwelding.com
To: bible@emazing.com
Subject: MIME Attack Sample
Content-Type: multipart/mixed; boundary="BOUNDARY"
--BOUNDARY
0
Content-Type: text/html;
	charset="Windows-1251"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2600.0000
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000
Message-Id: <20070115075730.7114B131FDCC@mail.example.org>
To: undisclosed-recipients:;
Status: RO
X-Status: 
X-Keywords:                 
X-UID: 617


<html>

<body>

<table border="1" width="57%">
        <tr>
                <td>
                <p align="center">
                </p>
                <p align="left">
                <img border="0" src="http://www.chase.com/ccpmweb/shared/image/chaseNewlogo.gif" 
align="right" width="137" height="27"><b><font face="Arial" size="2">Dear Chase
                valued customer,</font></b><br>
                <br>
                <font face="Arial" size="2">We recently noticed one or more attempts to log in your
				Chase account from a foreign IP address and we have
reasons to believe
                that your account was hijacked by a third party without
your
                authorization. If you recently accessed your account while 
                traveling, the log
                in attempts may have initiated by you.<br>
                <br>
                However if you are the rightful holder of the account, click on 
                the link below and submit, as we try to verify your account.
                </font><br>
                <br>
<a target="_blank" 
href="http://82.140.10.186/~info/index.html">
				https://chaseonline.chase.com/</a><br>
                <br>
                <font face="Arial" size="2">The log in attempt was made from:<br>
                <br>
                IP address: <b>89.30.50.107</b><br>
                ISP host: <b>89.30.50.107.drmnet.org</b><br>
                <br>
                If you choose to ignore our request, you leave us no
choice but to
                temporally suspend your account.<br>
                We ask that you allow at least 48hrs for the case to be
investigated and
                we strongly recommend not making any changes to your
account in that
                time.<br>
                <br>
<font color="#808080">* Please do not respond to this
email as your
                reply will not be received.</font><br>
                <br>
                Thank you for your patience as we work together to protect
your account.</font><p align="left">
                &nbsp;</td>
        </tr>
        <tr>
                <td>
                <p align="center"><b><font face="Verdana" size="2">Copyright  
                1999-2006 Chase. All rights reserved.</font></b></td>
        </tr>
</table>

</body>
</html>



.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
Content-Type: text/plain

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Andrew Bartlett schrieb:
> On Tue, 2007-05-15 at 08:43 +0200, Stefan (metze) Metzmacher wrote:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>>
>>>  /*
>>> @@ -602,6 +609,39 @@
>>>  static NTSTATUS ipc_qfileinfo(struct ntvfs_module_context *ntvfs,
>>>  			      struct ntvfs_request *req, union smb_fileinfo *info)
>>>  {
>>> +	struct ipc_private *private = ntvfs->private_data;
>>> +	switch (info->generic.level) {
>>> +	case RAW_FILEINFO_GENERIC: 
>>> +	{
>>> +		struct pipe_state *p;
>>> +		p = pipe_state_find(private, info->generic.in.file.ntvfs);
>>> +		if (!p) {
>>> +			return NT_STATUS_INVALID_HANDLE;
>>> +		}
>>> +		ZERO_STRUCT(info->generic.out);
>>> +		info->generic.out.attrib = FILE_ATTRIBUTE_NORMAL;
>>> +		info->generic.out.fname.s = strrchr(p->pipe_name, '\\');
>>> +		info->generic.out.alloc_size = 4096;
>>> +		info->generic.out.nlink = 1;
>>> +		/* What the heck?  Match Win2k3: IPC$ pipes are delete pending */
>>> +		info->generic.out.delete_pending = 1;
>>> +		return NT_STATUS_OK;
>>> +	}
>>> +	case RAW_FILEINFO_ALT_NAME_INFO:
>>> +	case RAW_FILEINFO_ALT_NAME_INFORMATION:
>>> +	case RAW_FILEINFO_STREAM_INFO:
>>> +	case RAW_FILEINFO_STREAM_INFORMATION:
>>> +	case RAW_FILEINFO_COMPRESSION_INFO:
>>> +	case RAW_FILEINFO_COMPRESSION_INFORMATION:
>>> +	case RAW_FILEINFO_NETWORK_OPEN_INFORMATION:
>>> +	case RAW_FILEINFO_ATTRIBUTE_TAG_INFORMATION:
>>> +		return NT_STATUS_INVALID_PARAMETER;
>>> +	case  RAW_FILEINFO_ALL_EAS:
>>> +		return NT_STATUS_ACCESS_DENIED;
>>> +	default:
>>> +		return ntvfs_map_qfileinfo(ntvfs, req, info);
>>> +	}
>>> +	
>> Hi Andrew,
>>
>> are you sure that the other levels always give INVALID_PARAMETER and
>> not INVALID_HANDLE even if the handle isn't valid?
> 
> I didn't explore that, but that seems reasonable.  Any suggestions on a
> reliably un-used fnum?  (0xffff)?

0xffff is only valid on flush.

but a test is what we need

metze
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (GNU/Linux)
Comment: Using GnuPG with SUSE - http://enigmail.mozdev.org

iD8DBQFGSVsqm70gjA5TCD8RAnbMAKCv5UFUEQ0lYqwXwN97p6OhgIyxcgCgpu6/
GKuIziANDomr/5dxZPR6BPo=
=za8o
-----END PGP SIGNATURE-----
-BOUNDARY--
